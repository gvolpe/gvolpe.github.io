<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gvolpe&#39;s blog</title>
    <description>Principled Software Craftsmanship</description>
    <link>https://gvolpe.github.io/</link>
    <atom:link href="https://gvolpe.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 18 Dec 2024 07:40:59 +0000</pubDate>
    <lastBuildDate>Wed, 18 Dec 2024 07:40:59 +0000</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Home Manager: dotfiles management</title>
        <description>&lt;h2 id=&quot;what-is-home-manager&quot;&gt;What is Home Manager?&lt;/h2&gt;

&lt;p&gt;Quoting the official description &lt;a href=&quot;https://github.com/nix-community/home-manager/&quot;&gt;Home Manager&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This project provides a basic system for managing a user environment using the Nix package manager together with the Nix libraries found in Nixpkgs. It allows declarative configuration of user specific (non-global) packages and dotfiles.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Wait a minute! If you had been following my blog for a while, you know a lot has been written about Home Manager already, so why am I going back to basics? Mainly because I noticed plenty of confusion out in the wild, thus I would like to demystify some of the misconceptions that exist, and provide you with ideas and examples so that you can reap the benefits of this magnificent tool.&lt;/p&gt;

&lt;h3 id=&quot;nix-is-hard&quot;&gt;Nix is hard&lt;/h3&gt;

&lt;p&gt;Let‚Äôs start by setting the record straight: &lt;strong&gt;&lt;em&gt;Nix has an incredible steep learning curve&lt;/em&gt;&lt;/strong&gt;. There are no shortcuts to getting productive with it, though, it very much pays off in the end.&lt;/p&gt;

&lt;p&gt;Learning Nix compares to learning functional programming coming from an object-oriented / primitive programming background. Your brain needs to be rewired. You are now dealing with immutable data structures that go as far as the operating system ‚Äî if you dare swimming in &lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS&lt;/a&gt; waters.&lt;/p&gt;

&lt;p&gt;So yes, Nix is hard, but it‚Äôs all worth it once it clicks. However, you can‚Äôt expect to fully grasp it without committing 100%. &lt;strong&gt;&lt;em&gt;Nix requires you to go all the way in&lt;/em&gt;&lt;/strong&gt;. Failure to do so may quickly lead you into an inevitable outburst of rage and frustration against it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/gifs/rage.webp&quot; alt=&quot;rage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So keep that in mind if you‚Äôre only taking your first steps with Nix and Home Manager üòÅ&lt;/p&gt;

&lt;h2 id=&quot;use-cases&quot;&gt;Use cases&lt;/h2&gt;

&lt;p&gt;Home Manager can be used incrementally. It is not necessary to use its every feature all at once. My recommendation is to progress with the tool by taking smaller steps instead, for which I think the following ordered list of features is a good start right after you install it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Software installation.&lt;/li&gt;
  &lt;li&gt;Declarative programs.&lt;/li&gt;
  &lt;li&gt;Declarative services.&lt;/li&gt;
  &lt;li&gt;Dotfiles management.&lt;/li&gt;
  &lt;li&gt;Overlays, overrides, and custom modules.&lt;/li&gt;
  &lt;li&gt;Full desktop management.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Get familiar with each step as you move forward. Don‚Äôt rush trying to understand everything in one go as that can quickly become a very daunting task, so take your time learning how things work.&lt;/p&gt;

&lt;p&gt;This is more or less the path I have taken with it, but the cool thing is that it can be used in a sort of mix-and-match fashion. For instance, you can only use it to install packages (1) and run services (3), or to install declarative programs (2) and override some packages (6), and so on.&lt;/p&gt;

&lt;h2 id=&quot;software-installation&quot;&gt;Software installation&lt;/h2&gt;

&lt;p&gt;Installing software from &lt;code&gt;nixpkgs&lt;/code&gt; ‚Äî the &lt;a href=&quot;https://repology.org/repositories/graphs&quot;&gt;largest and most up-to-date package repository in the entire universe&lt;/a&gt; ‚Äî is arguably the simplest use case.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  home&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;packages =&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    chromium &lt;span class=&quot;c1&quot;&gt;# browser&lt;/span&gt;
    nemo &lt;span class=&quot;c1&quot;&gt;# file manager&lt;/span&gt;
    reaper &lt;span class=&quot;c1&quot;&gt;# digital audio workstation (DAW)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs all it takes to install these three packages with default settings.&lt;/p&gt;

&lt;p&gt;A lot of them may require custom configuration, which are part of the so-called ‚Äúdotfiles‚Äù. In the last few sections of this post, we‚Äôll learn how to efficiently manage them via Home Manager. Until then, it is recommended that you manage them as you would without it.&lt;/p&gt;

&lt;h3 id=&quot;pro-tips&quot;&gt;Pro tips&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Head over to &lt;a href=&quot;https://search.nixos.org/packages&quot;&gt;search.nixos.org/packages&lt;/a&gt; to search for a given package.&lt;/li&gt;
  &lt;li&gt;Use &lt;a href=&quot;https://github.com/diamondburned/nix-search&quot;&gt;nix-search&lt;/a&gt; from your terminal if you don‚Äôt like Web UIs.
    &lt;ul&gt;
      &lt;li&gt;Alternatively, &lt;code&gt;nix search nixpkgs &amp;lt;package-name&amp;gt;&lt;/code&gt; also works, albeit being much slower.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/nix-community/nix-index&quot;&gt;nix-index&lt;/a&gt; is a good alternative to &lt;code&gt;command-not-found&lt;/code&gt; (invoked when you mistype a command).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;declarative-programs&quot;&gt;Declarative programs&lt;/h2&gt;

&lt;p&gt;Programs bring the NixOS module system into Home Manager, making it extremely easy and safe to install software declaratively, e.g.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  programs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;foot =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    server&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;settings =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;main =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;shell =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;fish&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/bin/fish&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;font =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;JetBrainsMono Nerdfont:size=10&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;pad =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;12x12&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;dpi-aware =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;yes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;selection-target =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;both&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;colors =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;alpha =&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This configuration installs the &lt;a href=&quot;https://codeberg.org/dnkl/foot&quot;&gt;Foot terminal emulator&lt;/a&gt; by generating the right configuration file (dotfile) based on the given settings. You don‚Äôt need to worry about whether the software needs a YAML or TOML file in a specific directory ‚Äî it‚Äôs all Nix as far as we are concerned.&lt;/p&gt;

&lt;h3 id=&quot;pro-tips-1&quot;&gt;Pro tips&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Head over to &lt;a href=&quot;https://nix-community.github.io/home-manager/options.xhtml&quot;&gt;Home Manager configuration options&lt;/a&gt; to find out the program‚Äôs settings.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In cases where further customization is needed for a package, we have a few options:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install it via &lt;code&gt;home.packages&lt;/code&gt; (1) and do proper dotfiles management (4).&lt;/li&gt;
  &lt;li&gt;Write a custom module similar to the original one that does what we need.
    &lt;ul&gt;
      &lt;li&gt;Upstream a PR if you can allow the time and think other users can benefit. It‚Äôs OSS after all üòä&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;declarative-services&quot;&gt;Declarative services&lt;/h2&gt;

&lt;p&gt;When a program needs to run as a daemon with certain permissions, a declarative service is what we need, which on Linux are supported via &lt;a href=&quot;https://systemd.io/&quot;&gt;systemd&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Examples of services include databases (PostgreSQL), analytics (Plausible), notification daemon (Dunst), etc. For instance, here‚Äôs my declarative configuration for &lt;a href=&quot;https://github.com/coldfix/udiskie&quot;&gt;udiskie&lt;/a&gt;: automounter for removable media.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  services&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;udiskie =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;automount =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;notify =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;settings =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;program_options =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;file_manager =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mimeo&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/bin/mimeo&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;tray =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;always&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The same caveats regarding customizations described for programs apply here as well.&lt;/p&gt;

&lt;h3 id=&quot;pro-tips-2&quot;&gt;Pro tips&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Services are also documented in the &lt;a href=&quot;https://nix-community.github.io/home-manager/options.xhtml&quot;&gt;Home Manager configuration options&lt;/a&gt; site.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When in need of a custom service that‚Äôs not available upstream, it‚Äôs always useful to look at source code examples to understand how we can create our own. For instance, here‚Äôs the code for &lt;a href=&quot;https://github.com/nix-community/home-manager/blob/83ecd50915a09dca928971139d3a102377a8d242/modules/services/dunst.nix#L180&quot;&gt;dunst service&lt;/a&gt;. You can land at it directly from the configuration options site, it‚Äôs all linked there.&lt;/p&gt;

&lt;h2 id=&quot;dotfiles-management&quot;&gt;Dotfiles management&lt;/h2&gt;

&lt;p&gt;This is where I‚Äôve seen the biggest confusion when using Home Manager, so let‚Äôs have a deeper look at the options we have when it comes to managing dotfiles.&lt;/p&gt;

&lt;p&gt;To make things easier to follow, we are going to look at a concrete example: installing &lt;a href=&quot;https://github.com/dylanaraps/neofetch&quot;&gt;neofetch&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Side note: &lt;em&gt;neofetch is highly customizable and still works flawlessly, even if it‚Äôs now archived and there are alternatives such as &lt;a href=&quot;https://github.com/hykilpikonna/hyfetch&quot;&gt;hyfetch&lt;/a&gt; and &lt;a href=&quot;https://github.com/fastfetch-cli/fastfetch&quot;&gt;fastfetch&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most people would start with something like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  home&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;packages =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;neofetch &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  xdg&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;configFile&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;neofetch/config.conf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;source =&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/neofetch.conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# alternatively, one could write the configuration inline as follows&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# xdg.configFile.&amp;quot;neofetch/config.conf&amp;quot;.text = &amp;#39;&amp;#39; #content here &amp;#39;&amp;#39;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;code&gt;neofetch.conf&lt;/code&gt; is your standard &lt;a href=&quot;https://github.com/dylanaraps/neofetch/wiki/Customizing-Info&quot;&gt;configuration file&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, this means that the actual dotfile used by the software that lives under &lt;code&gt;~/.config/neofetch/config.conf&lt;/code&gt; now &lt;em&gt;belongs to Home Manager&lt;/em&gt; and you don‚Äôt have write permissions.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;readlink -f ~/.config/neofetch/config.conf
/nix/store/21h3kkyipjdcsgv72vbd2i1h6vzcl0pk-hm_electric.conf

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls -la /nix/store/21h3kkyipjdcsgv72vbd2i1h6vzcl0pk-hm_electric.conf
.r--r--r-- 17k root  &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; Jan  &lt;span class=&quot;m&quot;&gt;1970&lt;/span&gt; /nix/store/21h3kkyipjdcsgv72vbd2i1h6vzcl0pk-hm_electric.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The only way to make changes is by modifying your Nix configuration, running &lt;code&gt;home-manager switch&lt;/code&gt; ‚è≥, and hoping that the changes you made were correct. Otherwise, it‚Äôs rinse and repeat, which is less than ideal when you‚Äôre tinkering around with dotfiles and want to tweak little things.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/gifs/father.webp&quot; alt=&quot;father&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This begs the question: &lt;strong&gt;&lt;em&gt;Is Home Manager the wrong tool for managing dotfiles?&lt;/em&gt;&lt;/strong&gt; I guess most deserters found themselves at this crossroad at some point, so let‚Äôs find out more.&lt;/p&gt;

&lt;h3 id=&quot;light-at-the-end-of-the-tunnel&quot;&gt;Light at the end of the tunnel&lt;/h3&gt;

&lt;p&gt;Let me introduce you to the unsung hero: &lt;strong&gt;&lt;a href=&quot;https://github.com/nix-community/home-manager/blob/83ecd50915a09dca928971139d3a102377a8d242/modules/files.nix#L64-L69&quot;&gt;mkOutOfStoreSymlink&lt;/a&gt;&lt;/strong&gt; ‚Äî a simple function hidden in plain sight deep in the Home Manager source code, defined as follows:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;file&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;mkOutOfStoreSymlink =&lt;/span&gt; path&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;pathStr =&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;toString&lt;/span&gt; path&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;name =&lt;/span&gt; hm&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;strings&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;storeFileName &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;baseNameOf&lt;/span&gt; pathStr&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;runCommandLocal name &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;ln -s &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;escapeShellArg pathStr&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; $out&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It‚Äôs heavily under-documented, which doesn‚Äôt make things easier for beginners, so that‚Äôs something we should improve within the Nix community, but I hope this blog post is a good start.&lt;/p&gt;

&lt;p&gt;So, how does it help? Let‚Äôs get back to the &lt;code&gt;neofetch&lt;/code&gt; example and refactor it to use this function.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lib&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; config&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;filePath =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/home/gvolpe/workspace/nix-config/programs/neofetch/electric.conf&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;configSrc =&lt;/span&gt; config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;file&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mkOutOfStoreSymlink filePath&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  home&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;packages =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;neofetch &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  xdg&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;configFile&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;neofetch/config.conf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;source =&lt;/span&gt; configSrc&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After one last &lt;code&gt;home-manager switch&lt;/code&gt; run, let‚Äôs now check the dotfile symlink target:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;readlink -f ~/.config/neofetch/config.conf
/home/gvolpe/workspace/nix-config/home/programs/neofetch/electric.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Success! üí™ For the curious reader, this is not a direct symlink; it‚Äôs a chain of symlinks.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;readlink ~/.config/neofetch/config.conf
/nix/store/qxvvj5v1w8za9wfb80cnl6g5ja7w9qzz-home-manager-files/.config/neofetch/config.conf

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;readlink /nix/store/qxvvj5v1w8za9wfb80cnl6g5ja7w9qzz-home-manager-files/.config/neofetch/config.conf
/nix/store/d0cmjnz9advx1irqq1c6slrl0gjklipf-hm_electric.conf

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;readlink /nix/store/d0cmjnz9advx1irqq1c6slrl0gjklipf-hm_electric.conf
/home/gvolpe/workspace/nix-config/home/programs/neofetch/electric.conf

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls -la /home/gvolpe/workspace/nix-config/home/programs/neofetch/electric.conf
.rw-r--r-- 17k gvolpe &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt; Dec 21:44 /home/gvolpe/workspace/nix-config/home/programs/neofetch/electric.conf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can now tweak our dotfiles as much as we want without Home Manager getting in the way. Once we‚Äôre happy with the results, we may want to go back to the immutable version (or not).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/gifs/understanding.webp&quot; alt=&quot;understanding&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It‚Äôs worth noticing that even if we decide to keep the mutable version, the dotfiles that we modify can still be versioned in our git repository, as it is the case with the &lt;code&gt;neofetch&lt;/code&gt; example.&lt;/p&gt;

&lt;p&gt;A good declarative alternative could be &lt;a href=&quot;https://github.com/nix-community/impermanence&quot;&gt;impermanence&lt;/a&gt;, which goes deep into handling persistent state, but it may be an over-killer solution if you‚Äôre only after dotfiles management.&lt;/p&gt;

&lt;h3 id=&quot;pro-tips-3&quot;&gt;Pro tips&lt;/h3&gt;

&lt;p&gt;Can we do better? Certainly! We can leverage custom Home Manager modules, which may seem an advanced feature at first, but it‚Äôs a trivial concept once it clicks.&lt;/p&gt;

&lt;p&gt;Examples always go a long way, so let‚Äôs dive right into it and define a new module named &lt;code&gt;dotfiles.nix&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; config&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lib&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;options =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;dotfiles =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;mutable =&lt;/span&gt; lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mkEnableOption &lt;span class=&quot;s2&quot;&gt;&amp;quot;mutable dotfiles&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;ss&quot;&gt;path =&lt;/span&gt; lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mkOption &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;type =&lt;/span&gt; lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;types&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;path&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;apply =&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;default =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;home&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;homeDirectory&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/workspace/nix-config/home&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;example =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;home&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;homeDirectory&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.dotfiles&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;description =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Location of the dotfiles working copy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It consists of two different options:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;mutable&lt;/code&gt;: a boolean flag that dictates whether we choose to build our entire Home Manager configuration via &lt;code&gt;mkOutOfStoreSymlink&lt;/code&gt; or as usual (the immutable version).&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;path&lt;/code&gt;: the path where you keep your dotfiles working copy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The latter has a default value that points to where I keep my dotfiles, which is also a git repository. We‚Äôll come back to this bit later on when we compare it to other solutions.&lt;/p&gt;

&lt;p&gt;This module can then be imported in the Home Manager configuration modules and we should be able to use it as any other module, such as &lt;code&gt;home.packages&lt;/code&gt; and other options.&lt;/p&gt;

&lt;p&gt;The main piece of Home Manager configuration would look something like this now:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  homeConfigurations&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;username&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; home-manager&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;homeManagerConfiguration &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;modules =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/dotfiles.nix&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/home.nix&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; dotfiles&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;mutable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We are now able to utilize this information in our &lt;code&gt;neofetch&lt;/code&gt; configuration (and anywhere else too):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lib&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; config&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;filePath =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;dotfiles&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;path&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/programs/neofetch/electric.conf&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;configSrc =&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;dotfiles&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mutable &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/electric.conf&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;file&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mkOutOfStoreSymlink filePath&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  home&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;packages =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;neofetch &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  xdg&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;configFile&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;neofetch/config.conf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;source =&lt;/span&gt; configSrc&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first thing we do is to evaluate the &lt;code&gt;dotfiles.mutable&lt;/code&gt; flag: if it‚Äôs set to &lt;code&gt;false&lt;/code&gt;, we import the configuration file into the Nix store; otherwise, we fallback to the &lt;code&gt;mkOutOfStoreSymlink&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;I was previously passing these values via &lt;code&gt;specialArgs&lt;/code&gt;, but I think having a dedicated &lt;code&gt;dotfiles&lt;/code&gt; module is a much better solution, inspired by &lt;a href=&quot;https://github.com/nix-community/home-manager/issues/2085#issuecomment-2022239332&quot;&gt;this Github comment&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;comparison&quot;&gt;Comparison&lt;/h2&gt;

&lt;p&gt;In a nutshell, relying on &lt;code&gt;mkOutOfStoreSymlink&lt;/code&gt; ends up being comparable to managing your dotfiles with tools such as &lt;a href=&quot;https://www.gnu.org/software/stow/&quot;&gt;GNU stow&lt;/a&gt; or &lt;a href=&quot;https://www.chezmoi.io/&quot;&gt;chezmoi&lt;/a&gt; &lt;em&gt;if we look exclusively at dotfiles management&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To understand whether using Home Manager for this is for you or not, we also need to look at what else it has in store for us, which goes back to leveraging the power of Nix.&lt;/p&gt;

&lt;p&gt;For instance, here are a few things we can easily achieve with Nix+HM that would be much harder with primitive stateful solutions. Following the &lt;code&gt;neofetch&lt;/code&gt; example, we could:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Enable image support.&lt;/li&gt;
  &lt;li&gt;Override specific version.&lt;/li&gt;
  &lt;li&gt;Build with different compiler flags.&lt;/li&gt;
  &lt;li&gt;Guarantee reproducibility across machines.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Enabling image support is something I worked on recently using the foot terminal emulator on Hyprland, which supports image rendering via the &lt;a href=&quot;https://en.wikipedia.org/wiki/Sixel&quot;&gt;Sixel protocol&lt;/a&gt;. Here‚Äôs all I had to do:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lib&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; config&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;neofetchPath =&lt;/span&gt; lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;makeBinPath &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; chafa imagemagick &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;neofetchSixelSupport =&lt;/span&gt; pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;neofetch&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;overrideAttrs &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;old&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;postInstall =&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;      wrapProgram $out/bin/neofetch --prefix PATH : &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;neofetchPath&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    &amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  home&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;packages =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; neofetchSixelSupport &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  xdg&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;configFile&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;neofetch/config.conf&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;source =&lt;/span&gt; configSrc&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It adds the necessary dependencies (&lt;a href=&quot;https://hpjansson.org/chafa/&quot;&gt;chafa&lt;/a&gt; and &lt;a href=&quot;https://imagemagick.org/&quot;&gt;imagemagick&lt;/a&gt;) to the PATH of &lt;code&gt;neofetch&lt;/code&gt;, without making them globally available. It really doesn‚Äôt get any easier than this!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/neofetch-image.png&quot; alt=&quot;neofetch&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Strictly speaking about dotfiles management with Home Manager, the main benefit is the ability to freeze or lock our files to make them reproducible in other machines, or also to serve as a reproducible snapshot in time if we ever want to get back to that specific version.&lt;/p&gt;

&lt;p&gt;Switching back and forth between the immutable and mutable versions becomes an easy task with the &lt;code&gt;dotfiles&lt;/code&gt; module. Nonetheless, one has to invest time in the initial configuration to get to this point.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/gifs/makes-sense.webp&quot; alt=&quot;sense&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here‚Äôs how I switch between the two on my machine.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;home-manager switch --flake .#homeConfigurations.hyprland-hdmi.activationPackage
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;home-manager switch --flake .#homeConfigurations.hyprland-hdmi-mutable.activationPackage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you understand all I wrote about it so far and still choose another solution like Stow, fair enough, it‚Äôs a great tool! Moreover, it can be combined with Home Manager; you can manage your dotfiles with Stow, and still take advantage of all the other features such as overlays/overrides and modules.&lt;/p&gt;

&lt;p&gt;Feel free to dig into my &lt;a href=&quot;https://github.com/gvolpe/nix-config&quot;&gt;Nix configuration&lt;/a&gt; files for more and leave any questions / comments here.&lt;/p&gt;

&lt;h2 id=&quot;closing-remarks&quot;&gt;Closing remarks&lt;/h2&gt;

&lt;p&gt;Home Manager rocks! ü§ò I hope you find this article useful and give yourself time to learn these tools the proper way. With the right amount of patience and dedication, you‚Äôll become productive soon enough.&lt;/p&gt;

&lt;p&gt;Last but not least, I would like to use this space to thank &lt;a href=&quot;https://rycee.net/&quot;&gt;Robert Helgesson&lt;/a&gt; for his invaluable work on Home Manager since its inception. It certainly takes considerable devotion to carry on with maintaining this project after so many years! üôá&lt;/p&gt;

&lt;p&gt;Best,
Gabriel.&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Dec 2024 23:00:00 +0000</pubDate>
        <link>https://gvolpe.github.io/blog/home-manager-dotfiles-management/</link>
        <guid isPermaLink="true">https://gvolpe.github.io/blog/home-manager-dotfiles-management/</guid>
        
        
        <category>nix</category>
        
        <category>nixos</category>
        
        <category>flakes</category>
        
        <category>home-manager</category>
        
        <category>dotfiles</category>
        
      </item>
    
      <item>
        <title>NixOS server up in minutes!</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;The folks at &lt;a href=&quot;https://garnix.io&quot;&gt;Garnix&lt;/a&gt; have done it again! You can now deploy a &lt;a href=&quot;https://nixos.org/&quot;&gt;NixOS server&lt;/a&gt; in minutes, just by defining your system on a &lt;code&gt;flake.nix&lt;/code&gt; and &lt;code&gt;git push&lt;/code&gt;‚Äòing your changes (Garnix needs to be enabled for the repo).&lt;/p&gt;

&lt;p&gt;In their latest blog post &lt;a href=&quot;https://garnix.io/blog/hosting-nixos&quot;&gt;Hands-on NixOS servers&lt;/a&gt;, they explain all the necessary steps to deploy your own server, so I won‚Äôt repeat things over. Furthermore, there‚Äôs &lt;a href=&quot;https://garnix.io/docs/hosting&quot;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Instead, I will explain how I used this opportunity to set up a web analytics server for this blog.&lt;/p&gt;

&lt;h2 id=&quot;web-analytics&quot;&gt;Web Analytics&lt;/h2&gt;

&lt;p&gt;I first looked into the different open-source solutions that allow self-hosting, and ended up choosing &lt;a href=&quot;https://plausible.io/&quot;&gt;Plausible&lt;/a&gt;, briefly defined as follows:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Plausible is intuitive, lightweight and open source web analytics. No cookies and fully compliant with GDPR, CCPA and PECR. Made and hosted in the EU, powered by European-owned cloud infrastructure üá™üá∫&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You can find the source code for the self-hosting community edition &lt;a href=&quot;https://github.com/plausible/community-edition/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So, how do we set it up to run as a service with NixOS? Here are the relevant pieces:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;host =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;analytics.gvolpe.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;internalPort =&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;imports =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/agenix.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

  services&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;plausible =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;adminUser =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;name =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;email =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;admin@garnix.io&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;activate =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;passwordFile =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/run/agenix/admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;server =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;baseUrl =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;https://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;host&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;port =&lt;/span&gt; internalPort&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;secretKeybaseFile =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/run/agenix/keybase&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  services&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;nginx =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    virtualHosts&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;host&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      locations&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;proxyPass =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://localhost:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;toString&lt;/span&gt; internalPort&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This configuration is written to &lt;code&gt;hosts/default.nix&lt;/code&gt;. The Plausible server runs on &lt;code&gt;localhost:8000&lt;/code&gt;, which is proxied via &lt;a href=&quot;https://nginx.org/en/&quot;&gt;nginx&lt;/a&gt; to ports 80 and 443 (the latter handled directly by Garnix).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  networking&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;firewall&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;allowedTCPPorts =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It also uses a &lt;a href=&quot;https://www.postgresql.org/&quot;&gt;PostgreSQL&lt;/a&gt; instance &lt;a href=&quot;https://github.com/NixOS/nixpkgs/blob/345c263f2f53a3710abe117f28a5cb86d0ba4059/nixos/modules/services/web-apps/plausible.nix#L308&quot;&gt;auto-magically set up by its NixOS module&lt;/a&gt; ‚Äî gotta love NixOS! ü§©&lt;/p&gt;

&lt;p&gt;Moreover, note that I used a &lt;a href=&quot;https://garnix.io/docs/hosting/custom-domain&quot;&gt;custom domain&lt;/a&gt;, but this is not a requirement. You can get started by setting it to a value that adheres to the following format:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;lt;HOST&amp;gt;.&amp;lt;BRANCH&amp;gt;.&amp;lt;REPONAME&amp;gt;.&amp;lt;GITHUB ORG/USER&amp;gt;.garnix.me&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So, for this example in particular, it would be as follows:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;ss&quot;&gt;host =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;web.main.web-analytics.gvolpe.garnix.me&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;secrets&quot;&gt;Secrets&lt;/h3&gt;

&lt;p&gt;The Plausible service requires two secrets: the admin user‚Äôs password, and the keybase secret. To set them up safely, we use &lt;a href=&quot;https://github.com/ryantm/agenix&quot;&gt;agenix&lt;/a&gt;, as documented in the &lt;a href=&quot;https://garnix.io/docs/hosting/secrets&quot;&gt;Garnix docs&lt;/a&gt; ‚Äî though, keep in mind its caveats!&lt;/p&gt;

&lt;p&gt;Here‚Äôs the &lt;code&gt;agenix.nix&lt;/code&gt; file imported in the previous code snippet:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;age =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;secrets =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      admin&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;file =&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/secrets/admin.age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      keybase&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;file =&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/secrets/keybase.age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;identityPaths =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/garnix/keys/repo-key&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This requires the agenix NixOS module to be imported first:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  nixosConfigurations&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;web =&lt;/span&gt; nixpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nixosSystem &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;modules =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      garnix-lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nixosModules&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;garnix
      agenix&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nixosModules&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;default
      &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/hosts&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Also note that every secret needs to be manually set up via &lt;code&gt;agenix&lt;/code&gt; (see documentation), resulting in two encrypted files that can only be decrypted with the supplied SSH keys.&lt;/p&gt;

&lt;h3 id=&quot;garnix-configuration&quot;&gt;Garnix configuration&lt;/h3&gt;

&lt;p&gt;We can opt for &lt;a href=&quot;https://garnix.io/docs/hosting/branch&quot;&gt;continuous deployment&lt;/a&gt;, so that our server is re-deployed on every commit to the main branch. Here‚Äôs what we need to set in our &lt;code&gt;garnix.yaml&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;servers&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;web&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;deployment&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;on-branch&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;branch&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;main&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The configuration name &lt;code&gt;web&lt;/code&gt; corresponds to the exposed NixOS configuration:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix flake show
git+file:///home/gvolpe/workspace/web-analytics
‚îú‚îÄ‚îÄ‚îÄnixosConfigurations
‚îÇ   ‚îî‚îÄ‚îÄ‚îÄweb: NixOS configuration
‚îî‚îÄ‚îÄ‚îÄpackages
    ‚îî‚îÄ‚îÄ‚îÄx86_64-linux
        ‚îî‚îÄ‚îÄ‚îÄdefault: package &lt;span class=&quot;s1&quot;&gt;&amp;#39;agenix-0.15.0&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And of course, we could deploy on every &lt;a href=&quot;https://garnix.io/docs/hosting/pr&quot;&gt;pull request&lt;/a&gt; too!&lt;/p&gt;

&lt;h3 id=&quot;see-it-live&quot;&gt;See it live!&lt;/h3&gt;

&lt;p&gt;Sure enough, after a few hours of traffic, we can already see active metrics:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/plausible.png&quot; alt=&quot;analytics&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can see it &lt;a href=&quot;https://analytics.gvolpe.com/gvolpe.com&quot;&gt;live here&lt;/a&gt; ‚Äî these analytics are publicly available.&lt;/p&gt;

&lt;p&gt;NOTE: By default, signing up via the web is disabled; the only way to access it is with the ‚Äúadmin‚Äù user.&lt;/p&gt;

&lt;h2 id=&quot;persistence&quot;&gt;Persistence&lt;/h2&gt;

&lt;p&gt;Let‚Äôs now discuss a crucial aspect of server deployments: &lt;em&gt;state&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I tried a few deployments until I got the service up and running, and by default, a new server with unique IP address would be provisioned on every commit to the configured branch, as we can see in the list of servers below (it can be accessed via your &lt;a href=&quot;https://garnix.io/servers&quot;&gt;Garnix account&lt;/a&gt;):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/hosting-garnix.png&quot; alt=&quot;servers&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is great for zero-downtime deployments, but Plausible persists its data in PostgreSQL, so we need that data to still be available on new deployments.&lt;/p&gt;

&lt;p&gt;Fortunately, Garnix &lt;a href=&quot;https://garnix.io/docs/hosting/persistence&quot;&gt;supports persistence&lt;/a&gt; via the following NixOS configuration:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  garnix&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;server&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;persistence =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;name =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;plausible&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As long as the &lt;code&gt;name&lt;/code&gt; remains the same, Garnix will deploy new commits to the same machine (same IP address). This is great for quick solutions, but for anything serious, please consider backing up your data.&lt;/p&gt;

&lt;p&gt;I might give &lt;a href=&quot;https://www.borgbackup.org/&quot;&gt;Borg&lt;/a&gt; a try soon enough, as it‚Äôs &lt;a href=&quot;https://search.nixos.org/options?channel=unstable&amp;amp;from=0&amp;amp;size=50&amp;amp;sort=relevance&amp;amp;type=packages&amp;amp;query=services.borgbackup&quot;&gt;already packaged&lt;/a&gt; for Nix :)&lt;/p&gt;

&lt;h2 id=&quot;machine&quot;&gt;Machine&lt;/h2&gt;

&lt;p&gt;It is worth mentioning a few things about the &lt;strong&gt;FREE machine&lt;/strong&gt; we get by default on the free account, which you can connect to via SSH with its assigned IP address.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/ssh-machine.png&quot; alt=&quot;ssh-machine&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We‚Äôre obviously running NixOS! Furthermore, we have an Intel Xeon CPU with two cores and 4Gb of RAM, which I find very generous already, but what stands out the most to me is the free 40Gb of disk space!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/ssh-monitor.png&quot; alt=&quot;ssh-monitor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here we can observe a few services like Clickhouse and Postgres up and running, among other metrics.&lt;/p&gt;

&lt;h2 id=&quot;final-words&quot;&gt;Final words&lt;/h2&gt;

&lt;p&gt;If you have followed my blog for a while, it shouldn‚Äôt come as a surprise to see Garnix featured &lt;a href=&quot;../categories/#garnix&quot;&gt;once again&lt;/a&gt;; they keep on delivering great features!&lt;/p&gt;

&lt;p&gt;I think of this one as &lt;strong&gt;hosting and continuous deployment made simple‚Ñ¢Ô∏è&lt;/strong&gt;. Nevertheless, bear in mind that this feature is currently in beta, so please report any issues you may find.&lt;/p&gt;

&lt;p&gt;Have you tried Garnix yet? If not, what are you waiting for? üòâ&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DISCLAIMER&lt;/strong&gt;: I am not affiliated to Garnix; this is an independent review.&lt;/p&gt;

&lt;p&gt;Best,
Gabriel.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;addendum&quot;&gt;Addendum&lt;/h3&gt;

&lt;p&gt;Well, apparently someone shared this blog-post on &lt;a href=&quot;https://news.ycombinator.com/item?id=41558865&quot;&gt;Hacker News&lt;/a&gt; and the metrics have blown up, so this was actually a great test for the Plausible server, thank you all! üôè&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/hn-metrics.png&quot; alt=&quot;hacker-news&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Sep 2024 23:00:00 +0000</pubDate>
        <link>https://gvolpe.github.io/blog/nixos-server/</link>
        <guid isPermaLink="true">https://gvolpe.github.io/blog/nixos-server/</guid>
        
        
        <category>nix</category>
        
        <category>nixos</category>
        
        <category>flakes</category>
        
        <category>garnix</category>
        
        <category>hosting</category>
        
      </item>
    
      <item>
        <title>Flake Schemas</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Flake schemas were &lt;a href=&quot;https://determinate.systems/posts/flake-schemas/&quot;&gt;introduced by Determinate Systems&lt;/a&gt; (written by &lt;a href=&quot;https://github.com/edolstra&quot;&gt;Eelco Dolstra&lt;/a&gt; ‚Äî creator of Nix) about half a year ago now (August 2023), which is quite a promising feature, but what is the current status? Is it usable yet?&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/NixOS/nix/pull/8892&quot;&gt;PR&lt;/a&gt; that introduces flake schemas was submitted to &lt;code&gt;NixOS/nix&lt;/code&gt; the same day the announcement was made, and it sadly remains in DRAFT mode until today. However, if you look at the comments, some expert users reported using this feature successfully, so I thought it was about time to give it a shot myself.&lt;/p&gt;

&lt;p&gt;So here‚Äôs where the fun starts: in order to use it, we need &lt;em&gt;that&lt;/em&gt; specific &lt;code&gt;nix&lt;/code&gt; client version (from the PR) with flake schemas support, which fortunately for us, is conveniently provided on &lt;a href=&quot;https://github.com/DeterminateSystems/nix-src/tree/flake-schemas&quot;&gt;this flake&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;sneak-preview&quot;&gt;Sneak preview&lt;/h2&gt;

&lt;p&gt;Before we look into the shenanigans we need to get through to get this working, let‚Äôs appreciate for a second what it brings to the table.&lt;/p&gt;

&lt;p&gt;Shown below is a side-by-side comparison of &lt;code&gt;nix flake show&lt;/code&gt;‚Äôs output on my &lt;a href=&quot;https://github.com/gvolpe/nix-config&quot;&gt;NixOS configuration&lt;/a&gt; flake:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/flake-show-schemas.png&quot; alt=&quot;schemas&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Neat! Don‚Äôt you think? I was irked by the usual &lt;code&gt;homeConfigurations: unknown&lt;/code&gt; output.&lt;/p&gt;

&lt;h2 id=&quot;making-it-work&quot;&gt;Making it work&lt;/h2&gt;

&lt;p&gt;One would need to add &lt;a href=&quot;https://github.com/DeterminateSystems/flake-schemas&quot;&gt;DeterminateSystems/flake-schemas&lt;/a&gt; as an input to &lt;code&gt;flake.nix&lt;/code&gt;, but you‚Äôll find there are a few useful open PRs since last year that solve real problems, but pretty much like the entire feature, they also seem inactive. So to try this out, I‚Äôve made &lt;a href=&quot;https://github.com/gvolpe/flake-schemas&quot;&gt;a fork&lt;/a&gt; and applied some of those patches myself.&lt;/p&gt;

&lt;p&gt;With that out of the way, we can now define the schema inputs in our flake:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;inputs =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    nixpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nixpkgs/nixos-unstable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    flake-schemas&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;github:gvolpe/flake-schemas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;## nix client with schema support: see https://github.com/NixOS/nix/pull/8892&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;nix-schema =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;flake-schemas&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;follows =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;flake-schemas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;github:DeterminateSystems/nix-src/flake-schemas&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And as outputs, we define the standard schemas plus a custom one we‚Äôll see soon:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;schemas =&lt;/span&gt;
    inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;flake-schemas&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;schemas &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/lib/schemas.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; flake-schemas&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As pointed out by Greg in &lt;a href=&quot;https://github.com/DeterminateSystems/flake-schemas/issues/14&quot;&gt;one of the open issues&lt;/a&gt;, the &lt;code&gt;nix&lt;/code&gt; client from the fork doesn‚Äôt build straight away, so we need some tweaks that the following overlay takes care of:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;f: p: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  nix-schema &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; inputs.nix-schema.packages.&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.nix.overrideAttrs &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;old: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;doCheck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;doInstallCheck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;postInstall&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; old.postInstall + &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
      rm &lt;span class=&quot;nv&quot;&gt;$out&lt;/span&gt;/bin/nix-*
      mv &lt;span class=&quot;nv&quot;&gt;$out&lt;/span&gt;/bin/nix &lt;span class=&quot;nv&quot;&gt;$out&lt;/span&gt;/bin/nix-schema
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then we can add it to our system packages, conveniently named &lt;code&gt;nix-schema&lt;/code&gt; to avoid conflicts:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  environment&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;systemPackages =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nix-schema
  &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;NOTE: the &lt;code&gt;rm $out/bin/nix-*&lt;/code&gt; bit ensures that all the usual commands such as &lt;code&gt;nix-build&lt;/code&gt;, &lt;code&gt;nix-shell&lt;/code&gt;, etc don‚Äôt get overridden, which is &lt;a href=&quot;https://discourse.nixos.org/t/the-program-nix-build-is-not-in-your-path/42943&quot;&gt;one of the issues I got myself into&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next we have the &lt;code&gt;lib/schemas.nix&lt;/code&gt; file referenced above, which defines the schema for the &lt;code&gt;out&lt;/code&gt; custom output in my &lt;code&gt;nix-config&lt;/code&gt; repo, which is a rather simple example of a flake schema:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; flake-schemas &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;out =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;version =&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;doc =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Exports custom attrsets...&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;inventory =&lt;/span&gt; output&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      flake-schemas&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mkChildren &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;builtins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mapAttrs
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;_&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; _&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;what =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;custom instance to be used by consumers of this flake&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        output&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Explaining how flake schemas are actually defined is out of the scope of this post, but the meaning of ‚Äúinventory‚Äù, ‚Äúchildren‚Äù and other fields is briefly documented in the linked nix PR.&lt;/p&gt;

&lt;p&gt;Moreover, the &lt;code&gt;nix&lt;/code&gt; client is handily exposed as a flake app:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  apps&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;system&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;nix&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;app&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;program =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nix-schema&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/bin/nix-schema&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So we can run it directly from this flake without installing the special &lt;code&gt;nix&lt;/code&gt; version.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix run github:gvolpe/nix-config#nix -- --version
nix-schema &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Nix&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2.21.0pre20240311_d76e5fb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;give-it-a-try-linux-only&quot;&gt;Give it a try (Linux only)&lt;/h3&gt;

&lt;p&gt;You can run the following command in any of your flake repositories to see the new ‚Äúshow‚Äù output:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix run github:gvolpe/nix-config#nix -- flake show&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Notice that the &lt;code&gt;nix&lt;/code&gt; client exposed on my flake is only compiled for Linux; though, you can follow the same steps and build it for other systems in the same fashion.&lt;/p&gt;

&lt;p&gt;One thing I noticed is that if your flake doesn‚Äôt explicitly define &lt;code&gt;flake-schemas&lt;/code&gt; as an input, then &lt;code&gt;homeManagerConfigurations&lt;/code&gt; is not properly detected, but it could be something wrong with &lt;a href=&quot;https://github.com/gvolpe/flake-schemas/blob/7d762079449d0ca63e92b0128c885021168c0c79/flake.nix#L242&quot;&gt;my implementation&lt;/a&gt; too, no idea (if you know what‚Äôs wrong, please let me know!).&lt;/p&gt;

&lt;p&gt;Another caveat of using the new command is that it‚Äôs quite slow, as it seems to evaluate all outputs. For instance, it took about &lt;strong&gt;~33.7 seconds&lt;/strong&gt; to evaluate my &lt;code&gt;nix-config&lt;/code&gt; flake the first time, as shown in &lt;a href=&quot;https://github.com/gvolpe/nix-config/pull/254#issuecomment-2042471639&quot;&gt;this PR comment&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Furthermore, there are a few schemas like &lt;code&gt;homeModules&lt;/code&gt; and &lt;code&gt;nixosModules&lt;/code&gt; that are unsupported at the moment, but that‚Äôs just a matter of adding the right schemas in place.&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final thoughts&lt;/h2&gt;

&lt;p&gt;I love this proposal and I wish it moves forward soon, so that every Nix user out there gets to enjoy it! However, considering how long it has been since its announcement, I‚Äôm not sure what to think.&lt;/p&gt;

&lt;p&gt;Frankly, I find the inactivity in the main &lt;code&gt;flake-schemas&lt;/code&gt; repository as well as in the initial &lt;code&gt;nix&lt;/code&gt; pull request a bit worrying, but I‚Äôm hoping it all turns out in a positive way.&lt;/p&gt;

&lt;p&gt;Have you tried flake schemas yet? What was your experience like?&lt;/p&gt;

&lt;p&gt;Best,
Gabriel.&lt;/p&gt;
</description>
        <pubDate>Tue, 09 Apr 2024 20:00:00 +0000</pubDate>
        <link>https://gvolpe.github.io/blog/flake-schemas/</link>
        <guid isPermaLink="true">https://gvolpe.github.io/blog/flake-schemas/</guid>
        
        
        <category>nix</category>
        
        <category>nixos</category>
        
        <category>flakes</category>
        
        <category>experimental</category>
        
      </item>
    
      <item>
        <title>Private Nix flake üîí</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;I blogged about &lt;a href=&quot;../garnix&quot;&gt;Garnix&lt;/a&gt; before, and it‚Äôs the solution I‚Äôve been using ever since for continuous integration. However, one thing I was missing was that private flakes were unsupported, so I had to live with a private local flake that I was commenting out on my public flake for a long time.&lt;/p&gt;

&lt;p&gt;Github Actions does support building private flakes by providing an access token, but it‚Äôs not very secure if your builds end up on a public cache anyway (not my case, though)‚Ä¶ Garnix recently added &lt;a href=&quot;https://garnix.io/docs/private_inputs&quot;&gt;support for private inputs&lt;/a&gt;, but it comes with some limitations (mainly due to security), so I could not take advantage of this new feature.&lt;/p&gt;

&lt;p&gt;Unhappy with my current situation, and armed with some extra motivation, I decided to take a completely different approach‚Ä¶ Also, I realized I hadn‚Äôt blogged in more than year! Time to fix it.&lt;/p&gt;

&lt;h3 id=&quot;former-settings&quot;&gt;Former settings&lt;/h3&gt;

&lt;p&gt;The flake I was commenting out on my public configuration only exposed an overlay, and looked as follows on my inputs:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;ss&quot;&gt;private-flake =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:gvolpe/private-flake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then I would add the private overlay only when the private flake was present in my inputs, so it could also build on CI.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;ss&quot;&gt;privateOverlay =&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;builtins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;hasAttr &lt;span class=&quot;s2&quot;&gt;&amp;quot;private-flake&amp;quot;&lt;/span&gt; inputs&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; private-flake&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;overlays&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;default
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;f&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; p&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It served its purpose, but I got tired of git-stashing these changes every time I had to update my flake.&lt;/p&gt;

&lt;h3 id=&quot;rethinking-public-flake&quot;&gt;Rethinking public flake&lt;/h3&gt;

&lt;p&gt;The solution was clear: &lt;em&gt;invert the dependency graph&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Instead of pulling my private flake‚Äôs overlays into my public configuration, why not doing it the other way around? To be frank, this is something I‚Äôve thought of many times, but I was always too lazy to do anything about it ¬Ø\_(„ÉÑ)_/¬Ø&lt;/p&gt;

&lt;p&gt;Strangely enough, not this time around, so I was ready to tackle it once and for all.&lt;/p&gt;

&lt;p&gt;Here‚Äôs what my public flake‚Äôs outputs look like before:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;homeConfigurations =&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/outputs/home-conf.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; inputs system pkgs extraArgs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;nixosConfigurations =&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/outputs/nixos-conf.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; inputs system pkgs extraArgs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I wanted my private flake to be able to build these configurations with a custom &lt;code&gt;pkgs&lt;/code&gt; instance, so the first step was to refactor these and make them builder methods on my main overlay.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;buildersOverlay =&lt;/span&gt; f&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; p&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;mkHomeConfigurations =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; pkgs &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; f &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/outputs/home-conf.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; inputs pkgs system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;ss&quot;&gt;mkNixosConfigurations =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; pkgs &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; f &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/outputs/nixos-conf.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; inputs pkgs system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And here‚Äôs how my public flake defines its outputs right now (simple enough, no?):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;outputs =&lt;/span&gt; inputs&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;system =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;x86_64-linux&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;ss&quot;&gt;overlays =&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/lib/overlays.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; inputs system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

      &lt;span class=&quot;ss&quot;&gt;pkgs =&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nixpkgs &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; overlays system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;allowUnfree =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; pkgs overlays&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

      &lt;span class=&quot;ss&quot;&gt;homeConfigurations =&lt;/span&gt; pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mkHomeConfigurations &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;nixosConfigurations =&lt;/span&gt; pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mkNixosConfigurations &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It can still be built independently with sane defaults, but it‚Äôs also extendable from other flakes.&lt;/p&gt;

&lt;h3 id=&quot;private-flake&quot;&gt;Private flake&lt;/h3&gt;

&lt;p&gt;Refactor done on the public side, now it was time to focus on the private flake. The entire &lt;code&gt;flake.nix&lt;/code&gt; definition is only 17 lines long! Neat, don‚Äôt you think?&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;description =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;My private flake&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nix-config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:gvolpe/nix-config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;outputs =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; nix-config&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;pkgs =&lt;/span&gt; nix-config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;extend &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;modules/overlay.nix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;homeConfigurations =&lt;/span&gt; pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mkHomeConfigurations &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;nixosConfigurations =&lt;/span&gt; pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mkNixosConfigurations &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Both Home Manager and NixOS configurations can be built by reusing the public config‚Äôs &lt;code&gt;pkgs&lt;/code&gt; instance, which is extended with a custom overlay.&lt;/p&gt;

&lt;p&gt;The custom overlay used to contain only private stuff, but now it also contains a secrets override (more on this below):&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;f&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; p&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;secrets =&lt;/span&gt; p&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;callPackage &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/secrets.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  private&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;stuff =&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/private-stuff.nix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I realized that my system was building, but that all my secrets were not present! \_(o_o)_/&lt;/p&gt;

&lt;p&gt;This was the case because I use &lt;code&gt;git-crypt&lt;/code&gt; on my public repo to encrypt them; one more obstacle on the road to finally nail this‚Ä¶&lt;/p&gt;

&lt;p&gt;The next step was to refactor all my public encrypted secrets and centralize them in a single overlay, so here‚Äôs how I define them now:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;githubToken =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;OVERRIDE_ME&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;mimeoAssociations =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;ngrokToken =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;OVERRIDE_ME&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;openaiApiKey =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;OVERRIDE_ME&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This means I no longer need &lt;code&gt;git-crypt&lt;/code&gt; in my public repo, but it &lt;a href=&quot;https://gist.github.com/marcopaganini/62fc51a679f8985c10c3ca5d0c84031c&quot;&gt;doesn‚Äôt&lt;/a&gt; seem &lt;a href=&quot;https://github.com/AGWA/git-crypt/issues/170&quot;&gt;trivial&lt;/a&gt; to &lt;a href=&quot;https://github.com/AGWA/git-crypt/issues/137&quot;&gt;remove it&lt;/a&gt;, so I‚Äôll get to that another day üôÑ&lt;/p&gt;

&lt;p&gt;Thus, all I have to do in my private flake is to override all these secrets in the custom overlay. Here‚Äôs the &lt;code&gt;secrets.nix&lt;/code&gt; file you can see referenced in the overlay above ‚Äî only showing a single secret for brevity.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; lib&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;githubToken =&lt;/span&gt; lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;secretManager &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;filepath =&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/secrets/github-token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;fileAction =&lt;/span&gt; lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;readFile&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;encryptedSha256 =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ce08397723eb2c8ae9673de34fab11db8799062c2659c673b4eddbfa4e05b8e1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;emptyValue =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I continue to use the &lt;a href=&quot;https://github.com/gvolpe/nix-config/blob/a1db9d16c403cad14a0ec98c6fc55b491920806d/lib/default.nix#L23&quot;&gt;secretsManager&lt;/a&gt; function from my public flake, which also depends on the file being encrypted with &lt;code&gt;git-crypt&lt;/code&gt;. This is how my secrets don‚Äôt end up on a public cache.&lt;/p&gt;

&lt;p&gt;Thus, I had to move all my secrets from the public repo to my private one, and set up &lt;code&gt;git-crypt&lt;/code&gt; once again. Though, that‚Äôs a one-time thing and I‚Äôm much happier they now live in a private repository instead.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;REPL superpower&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To quickly debug if the secrets are being set as expected, you can‚Äôt beat the REPL.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix repl
Welcome to Nix 2.20.3. Type :? &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; help.

nix-repl&amp;gt; :lf .
Added &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; variables.

nix-repl&amp;gt; inputs.nix-config.pkgs.secrets.githubToken
&lt;span class=&quot;s2&quot;&gt;&amp;quot;OVERRIDE_ME&amp;quot;&lt;/span&gt;

nix-repl&amp;gt; outputs.homeConfigurations.gvolpe-hdmi.pkgs.secrets.githubToken
&lt;span class=&quot;s2&quot;&gt;&amp;quot;this-secret-has-been-set-in-the-overlay&amp;quot;&lt;/span&gt;

nix-repl&amp;gt; outputs.nixosConfigurations.tongfang-amd.pkgs.secrets.githubToken
&lt;span class=&quot;s2&quot;&gt;&amp;quot;this-secret-has-been-set-in-the-overlay&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I absolutely love this extra capability nix gives us! It feels like a superpower ü•∑&lt;/p&gt;

&lt;h3 id=&quot;continuous-integration&quot;&gt;Continuous integration&lt;/h3&gt;

&lt;p&gt;With Garnix now supporting private flakes, I just needed to ensure the Garnix App had access to my private repo, as well as setting the right options on my &lt;code&gt;garnix.yaml&lt;/code&gt; file.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;enableGithubOrgAccessTokens&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;builds&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;l-Scalar-Plain&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;[]&lt;/span&gt;
 &lt;span class=&quot;l-Scalar-Plain&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
 &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;homeConfigurations.*&lt;/span&gt;
 &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;nixosConfigurations.*&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once it was all set, I had my private flake successfully building my Home Manager and NixOS configurations on Garnix in no time!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/garnix-private-build.png&quot; alt=&quot;summary&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://garnix.io/&quot;&gt;Garnix&lt;/a&gt; rocks! Now even more with a revamped website and UI :)&lt;/p&gt;

&lt;h3 id=&quot;closing-remarks&quot;&gt;Closing remarks&lt;/h3&gt;

&lt;p&gt;I must say I‚Äôm quite satisfied with my current solution, but we all know this is an eternal tinkering process, so I won‚Äôt lie to you (and to myself) by claiming this is its final form :)&lt;/p&gt;

&lt;p&gt;Perhaps, the only area that could use some improvement would be the management of secrets, but I don‚Äôt have a big need for it as my secrets are trivial and I don‚Äôt do remote server deployments and provisioning, so for now that‚Äôs not something I‚Äôm willing to spend time on.&lt;/p&gt;

&lt;p&gt;What do you think? Anything else you would improve or do differently? Let me know in the comments below!&lt;/p&gt;

&lt;p&gt;Best,
Gabriel.&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Feb 2024 22:00:00 +0000</pubDate>
        <link>https://gvolpe.github.io/blog/private-flake/</link>
        <guid isPermaLink="true">https://gvolpe.github.io/blog/private-flake/</guid>
        
        
        <category>nix</category>
        
        <category>nixos</category>
        
        <category>flakes</category>
        
        <category>ci</category>
        
        <category>garnix</category>
        
      </item>
    
      <item>
        <title>Nix remote builds</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Quoting the &lt;a href=&quot;https://nixos.org/manual/nix/stable/advanced-topics/distributed-builds.html&quot;&gt;official documentation&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Nix supports remote builds, where a local Nix installation can forward Nix builds to other machines. This allows multiple builds to be performed in parallel and allows Nix to perform multi-platform builds in a semi-transparent way. For instance, if you perform a build for a &lt;code&gt;86_64-darwin&lt;/code&gt; on an &lt;code&gt;i686-linux&lt;/code&gt; machine, Nix can automatically forward the build to a &lt;code&gt;x86_64-darwin&lt;/code&gt; machine, if available.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Remote builds enable interesting use cases and experiments. Besides building for different architectures, another use case that comes to mind would be having a low-resource machine building a derivation that would require heavy CPU usage (e.g. a Rust application) on the fly, without having to rely on CI builds or binary caches, effectively used as a development environment.&lt;/p&gt;

&lt;p&gt;While this may sound too good to be truth, not everyone out there has a powerful remote machine to connect to. Moreover, we may want to give remote builds a try to find out whether it could help us solve our problems before considering purchasing a new computer. To fill this gap (and much more!), let me introduce you to Nixbuild.&lt;/p&gt;

&lt;h3 id=&quot;nixbuildnet&quot;&gt;Nixbuild.net&lt;/h3&gt;

&lt;p&gt;In my &lt;a href=&quot;../garnix&quot;&gt;previous post&lt;/a&gt;, I promised I would write a follow-up post about &lt;a href=&quot;https://nixbuild.net/&quot;&gt;Nixbuild&lt;/a&gt;, officially promoted as follows:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The one-stop solution for efficient builds, smart caching and ultra-fast CI pipelines. Scales by default, pay-per-use, no vendor lock-in. Supports x86 and Arm builds.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you scroll down a bit on their site, you‚Äôll find the two fields required to sign up for a free trial: an email and an SSH key. Once you get the email to activate your account, you should head over to the &lt;a href=&quot;https://docs.nixbuild.net/getting-started/&quot;&gt;Getting started&lt;/a&gt; section of the documentation.&lt;/p&gt;

&lt;p&gt;The free account includes 25 free CPU hours of build time at the moment of writing, which should be more than enough to evaluate whether this could be a good fit for us. Or even to just experiment (and have fun!) with it and learn about remote builds :)&lt;/p&gt;

&lt;p&gt;To configure a NixOS machine to run remote builds, we need to do exactly what the documentation says:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  programs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;ssh&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;extraConfig =&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    Host eu.nixbuild.net&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;      PubkeyAcceptedKeyTypes ssh-ed25519&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;      IdentityFile /home/user/.ssh/my-nixbuild-key&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;  &amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  programs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;ssh&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;knownHosts =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;nixbuild =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;hostNames =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;eu.nixbuild.net&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;publicKey =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPIQCZc54poJ8vqawd8TraNryQeJnvH1eLpIDgbiqymM&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;nix =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;distributedBuilds =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;buildMachines =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;hostName =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;eu.nixbuild.net&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;system =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;x86_64-linux&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;maxJobs =&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;supportedFeatures =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;benchmark&amp;quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;big-parallel&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make sure to replace &lt;code&gt;IdentityFile&lt;/code&gt; with the path to your SSH key. That‚Äôs everything that‚Äôs needed, as this &lt;a href=&quot;https://github.com/gvolpe/nix-config/pull/166/files&quot;&gt;pull request&lt;/a&gt; on my repo demonstrates.&lt;/p&gt;

&lt;h3 id=&quot;ci-builds&quot;&gt;CI builds&lt;/h3&gt;

&lt;p&gt;Continuing with my &lt;a href=&quot;https://github.com/gvolpe/nix-config&quot;&gt;NixOS configuration&lt;/a&gt; as example, we can learn how to leverage Nixbuild as a CI service by using &lt;a href=&quot;https://github.com/nixbuild/nixbuild-action&quot;&gt;nixbuild-action&lt;/a&gt;. Here are the outputs of my Nix flake.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix flake show --allow-import-from-derivation
git+file:///home/gvolpe/workspace/nix-config?ref&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;...
‚îú‚îÄ‚îÄ‚îÄchecks
‚îÇ   ‚îî‚îÄ‚îÄ‚îÄx86_64-linux
‚îÇ       ‚îú‚îÄ‚îÄ‚îÄdell-xps: derivation &lt;span class=&quot;s1&quot;&gt;&amp;#39;nixos-system-dell-xps-15-9560-23.05.20230202.a100acd&amp;#39;&lt;/span&gt;
‚îÇ       ‚îú‚îÄ‚îÄ‚îÄgvolpe-edp: derivation &lt;span class=&quot;s1&quot;&gt;&amp;#39;home-manager-generation&amp;#39;&lt;/span&gt;
‚îÇ       ‚îú‚îÄ‚îÄ‚îÄgvolpe-hdmi: derivation &lt;span class=&quot;s1&quot;&gt;&amp;#39;home-manager-generation&amp;#39;&lt;/span&gt;
‚îÇ       ‚îî‚îÄ‚îÄ‚îÄtongfang-amd: derivation &lt;span class=&quot;s1&quot;&gt;&amp;#39;nixos-system-tongfang-amd-23.05.20230202.a100acd&amp;#39;&lt;/span&gt;
‚îú‚îÄ‚îÄ‚îÄhomeConfigurations: unknown
‚îú‚îÄ‚îÄ‚îÄnixosConfigurations
‚îÇ   ‚îú‚îÄ‚îÄ‚îÄdell-xps: NixOS configuration
‚îÇ   ‚îî‚îÄ‚îÄ‚îÄtongfang-amd: NixOS configuration
‚îî‚îÄ‚îÄ‚îÄpackages
    ‚îî‚îÄ‚îÄ‚îÄx86_64-linux
        ‚îú‚îÄ‚îÄ‚îÄmetals: package &lt;span class=&quot;s1&quot;&gt;&amp;#39;metals-0.11.10+117-476976c1-SNAPSHOT&amp;#39;&lt;/span&gt;
        ‚îî‚îÄ‚îÄ‚îÄmetals-updater: package &lt;span class=&quot;s1&quot;&gt;&amp;#39;metals-updater-script&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To build all the &lt;code&gt;packages&lt;/code&gt; and &lt;code&gt;checks&lt;/code&gt;, we need the following &lt;code&gt;.github/workflows/nixbuild.yml&lt;/code&gt; configuration:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;name: Nixbuild demo

on:
  pull_request:

&lt;span class=&quot;nb&quot;&gt;jobs&lt;/span&gt;:
  build:
    uses: nixbuild/nixbuild-action/.github/workflows/ci-workflow.yml@master
    secrets:
      nixbuild_ssh_key: &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;p&quot;&gt; { secrets.NIXBUILD_SSH_KEY &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    with:
      nix_conf: &lt;span class=&quot;s1&quot;&gt;&amp;#39;allow-import-from-derivation = true&amp;#39;&lt;/span&gt;
      filter_builds: &lt;span class=&quot;s1&quot;&gt;&amp;#39;.top_attr == &amp;quot;packages&amp;quot; or .top_attr == &amp;quot;checks&amp;quot;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It expects the &lt;code&gt;NIXBUILD_SSH_KEY&lt;/code&gt; environment variable to be set with your private SSH key value used to sign up for Nixbuild. Note that both &lt;code&gt;homeConfigurations&lt;/code&gt; and &lt;code&gt;nixosConfigurations&lt;/code&gt; are exposed as checks, so these will also be built, resulting in the following workflow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/nixbuild-jobs.png&quot; alt=&quot;jobs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once it finishes, it may produce some artifacts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/nixbuild-artifacts.png&quot; alt=&quot;artifacts&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As well as a final summary.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/nixbuild-summary.png&quot; alt=&quot;summary&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I found the summaries to be extremely helpful understanding what was built on the remote machine, which can also help us understand costs.&lt;/p&gt;

&lt;h3 id=&quot;final-words&quot;&gt;Final words&lt;/h3&gt;

&lt;p&gt;I gave Nixbuild a try mainly to learn about remote builds and evaluate their CI service mainly because of curiosity. However, I don‚Äôt have a use case for it besides building my NixOS configuration, for which I find a CI build + a binary cache to be sufficient, but who knows? I may have a more exciting use case for it someday.&lt;/p&gt;

&lt;p&gt;Talking specifically about CI builds, I found Garnix to be much faster compared to the free trial of Nixbuild, thus it will continue to be my daily driver. Nevertheless, Nixbuild is such a cool project and it‚Äôs much more than a CI service, so I definitely encourage everyone to have a look at their extensive documentation and give it a try.&lt;/p&gt;

&lt;p&gt;Best,
Gabriel.&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Feb 2023 22:00:00 +0000</pubDate>
        <link>https://gvolpe.github.io/blog/nix-remote-builds/</link>
        <guid isPermaLink="true">https://gvolpe.github.io/blog/nix-remote-builds/</guid>
        
        
        <category>nix</category>
        
        <category>flakes</category>
        
        <category>ci</category>
        
        <category>cachix</category>
        
        <category>garnix</category>
        
        <category>nixbuild</category>
        
      </item>
    
      <item>
        <title>Garnix CI</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://garnix.io/&quot;&gt;Garnix&lt;/a&gt; is a continuous integration (CI) service for Nix flakes that has been in Beta for a while. In their own words:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;With Nix-specific optimizations, Garnix makes CI with Nix fast ‚Äî a few seconds for no-op changes. Easy to setup, too ‚Äî if you have a flake.nix, you are ready to go. And we provide the build results as a cache, so you don‚Äôt have to build things locally. To top it all up, we run on 100% renewable energy. Because CI should bring you peace of mind.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My &lt;a href=&quot;https://github.com/settings/installations&quot;&gt;Github settings&lt;/a&gt; tell me I have installed the Garnix CI app in March 2022 and it‚Äôs been running alongside my GHA (Github Actions) workflows ever since. However, I haven‚Äôt really reaped its benefits until now.&lt;/p&gt;

&lt;p&gt;Once you install the Garnix CI app in your Github account and enable the repositories where you want it to run, you‚Äôll notice that it will automatically detect a &lt;code&gt;flake.nix&lt;/code&gt; and it will evaluate its packages, dev shells, checks and NixOS configurations. Still, this is all configurable per repository via a &lt;a href=&quot;https://github.com/gvolpe/nix-config/blob/master/garnix.yaml&quot;&gt;garnix.yaml&lt;/a&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/garnix-app.png&quot; alt=&quot;app&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;homeConfigurations&lt;/code&gt; output is &lt;a href=&quot;https://github.com/garnix-io/issues/issues/24&quot;&gt;not yet supported&lt;/a&gt;, but it‚Äôs in the plans. A current workaround is to expose these as &lt;code&gt;packages&lt;/code&gt; or &lt;code&gt;checks&lt;/code&gt; instead, as I have in my flake‚Äôs outputs.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;outputs =&lt;/span&gt; inputs&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;system =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;x86_64-linux&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;ci =&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/outputs/ci.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; inputs system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nixpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;lib&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; mapAttrs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;homeConfigurations =&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/outputs/home-conf.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; inputs system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

      &lt;span class=&quot;ss&quot;&gt;nixosConfigurations =&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/outputs/nixos-conf.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; inputs system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

      packages&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;system&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;ci&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; metals metals-updater&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

      checks&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;system&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;os =&lt;/span&gt; mapAttrs &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;_&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; c&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; c&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;system&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;build&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;toplevel&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; nixosConfigurations&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;hm =&lt;/span&gt; mapAttrs &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;_&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; c&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; c&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;activationPackage&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; homeConfigurations&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
        os &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; hm&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The downside of doing this is that building the Home Manager configurations requires &lt;a href=&quot;https://nixos.wiki/wiki/Import_From_Derivation&quot;&gt;Import From Derivation (IFD)&lt;/a&gt; (at least in my case) even for &lt;code&gt;nix flake show&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix flake show --allow-import-from-derivation
git+file:///home/gvolpe/workspace/nix-config?ref&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;...
‚îú‚îÄ‚îÄ‚îÄchecks
‚îÇ   ‚îî‚îÄ‚îÄ‚îÄx86_64-linux
‚îÇ       ‚îú‚îÄ‚îÄ‚îÄdell-xps: derivation &lt;span class=&quot;s1&quot;&gt;&amp;#39;nixos-system-dell-xps-15-9560-23.05.20230202.a100acd&amp;#39;&lt;/span&gt;
‚îÇ       ‚îú‚îÄ‚îÄ‚îÄgvolpe-edp: derivation &lt;span class=&quot;s1&quot;&gt;&amp;#39;home-manager-generation&amp;#39;&lt;/span&gt;
‚îÇ       ‚îú‚îÄ‚îÄ‚îÄgvolpe-hdmi: derivation &lt;span class=&quot;s1&quot;&gt;&amp;#39;home-manager-generation&amp;#39;&lt;/span&gt;
‚îÇ       ‚îî‚îÄ‚îÄ‚îÄtongfang-amd: derivation &lt;span class=&quot;s1&quot;&gt;&amp;#39;nixos-system-tongfang-amd-23.05.20230202.a100acd&amp;#39;&lt;/span&gt;
‚îú‚îÄ‚îÄ‚îÄhomeConfigurations: unknown
‚îú‚îÄ‚îÄ‚îÄnixosConfigurations
‚îÇ   ‚îú‚îÄ‚îÄ‚îÄdell-xps: NixOS configuration
‚îÇ   ‚îî‚îÄ‚îÄ‚îÄtongfang-amd: NixOS configuration
‚îî‚îÄ‚îÄ‚îÄpackages
    ‚îî‚îÄ‚îÄ‚îÄx86_64-linux
        ‚îú‚îÄ‚îÄ‚îÄmetals: package &lt;span class=&quot;s1&quot;&gt;&amp;#39;metals-0.11.10+117-476976c1-SNAPSHOT&amp;#39;&lt;/span&gt;
        ‚îî‚îÄ‚îÄ‚îÄmetals-updater: package &lt;span class=&quot;s1&quot;&gt;&amp;#39;metals-updater-script&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Nevertheless, I believe the pros greatly outweigh the cons.&lt;/p&gt;

&lt;p&gt;Here‚Äôs the &lt;a href=&quot;https://github.com/gvolpe/nix-config/pull/162/files&quot;&gt;pull request&lt;/a&gt; I made to completely remove the GHA workflows for my configuration (including Cachix) and use Garnix instead. The build times are insanely fast!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/garnix-actions.png&quot; alt=&quot;actions&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Building my Home Manager configuration used to take about &lt;strong&gt;7m 30s&lt;/strong&gt; with my previous setup. With Garnix, it built in &lt;strong&gt;1m 45s&lt;/strong&gt; the first time, but it only took about &lt;strong&gt;26s&lt;/strong&gt; in subsequent runs by leveraging its binary cache!&lt;/p&gt;

&lt;p&gt;The dashboard is quite minimalistic and could use some improvements, but the service is still in Beta :)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/garnix-home.png&quot; alt=&quot;home&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If we click on the status of any build, we can see the logs whenever available.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/garnix-logs.png&quot; alt=&quot;logs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are a few tickets raised in their &lt;a href=&quot;https://github.com/garnix-io/issues/issues&quot;&gt;issue tracker&lt;/a&gt; to make it nicer and provide a better user experience, thus I believe it can only get better from now üí™&lt;/p&gt;

&lt;h3 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h3&gt;

&lt;p&gt;How come Garnix does so much better than using plain Nix with a binary cache? It is vaguely explained it in the &lt;a href=&quot;https://garnix.io/docs/steps&quot;&gt;what Garnix CI does&lt;/a&gt; page, which I understand it involves the following steps.&lt;/p&gt;

&lt;p&gt;First of all, it gets all the attribute names of the supported outputs, e.g.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; .#packages.x86_64-linux --apply builtins.attrNames --json
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;metals&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;metals-updater&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; .#checks.x86_64-linux --apply builtins.attrNames --json
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dell-xps&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;gvolpe-edp&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;gvolpe-hdmi&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;tongfang-amd&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, it builds every attribute previously collected in &lt;em&gt;parallel&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix build .#metals --json
&lt;span class=&quot;o&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;drvPath&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;/nix/store/4kql56jcvr6q0fihw2wqq56gqpf6h9gl-metals-0.11.10+111-59a1b932-SNAPSHOT.drv&amp;quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;outputs&amp;quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;out&amp;quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&amp;quot;/nix/store/q65x0gng6ni18hfyfbshzr910vlw28rp-metals-0.11.10+111-59a1b932-SNAPSHOT&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&amp;quot;startTime&amp;quot;&lt;/span&gt;:0,&lt;span class=&quot;s2&quot;&gt;&amp;quot;stopTime&amp;quot;&lt;/span&gt;:0&lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix flake check &lt;span class=&quot;c&quot;&gt;# don&amp;#39;t really know what happens after this&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, it uses the derivation (&lt;code&gt;drvPath&lt;/code&gt;) of the outputs to query the nix log (or other heuristics when not available). I don‚Äôt know exactly what this means, but by running the following command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix show-derivation /nix/store/4kql56jcvr6q0fihw2wqq56gqpf6h9gl-metals-0.11.10+111-59a1b932-SNAPSHOT.drv&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We get the following attributes: &lt;code&gt;args&lt;/code&gt;, &lt;code&gt;builder&lt;/code&gt;, &lt;code&gt;env&lt;/code&gt;, &lt;code&gt;inputDrvs&lt;/code&gt;, &lt;code&gt;inputSrcs&lt;/code&gt;, &lt;code&gt;outputs&lt;/code&gt;, and &lt;code&gt;system&lt;/code&gt;. I assume it cleverly skips anything that hasn‚Äôt changed and builds only what did change, keeping the build times as short as possible, but it‚Äôs only a guess.&lt;/p&gt;

&lt;h3 id=&quot;chat-with-julian&quot;&gt;Chat with Julian&lt;/h3&gt;

&lt;p&gt;I reached out to the author of Garnix, &lt;a href=&quot;https://github.com/jkarni&quot;&gt;Julian Arni&lt;/a&gt;, and he kindly got back to me with a very detailed and speedy response, answering all my silly questions. Find them adapted a bit in the following sections.&lt;/p&gt;

&lt;h4 id=&quot;why-is-it-faster&quot;&gt;Why is it faster?&lt;/h4&gt;

&lt;p&gt;There are a few reasons it‚Äôs faster:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The cache is already in the disk, so builds don‚Äôt need to push and pull from the cache. Pulling, in particular, tends to take quite a long time, since essentially nothing is there yet. I‚Äôve seen 4-5 minutes of 20 minute CI runs be due to that. By default, Nix will pull even if nothing needs to be built, so even in ‚Äúdo nothing‚Äù runs you might end up paying that cost.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The cache can be shared across projects. With Cachix, each cache is kept separate, because the cache owner can push whatever they want to their cache. Garnix only allows builds that are pure by design, and that it itself has built, to enter the cache. This way, if any project or user has built the package, it‚Äôs safe to re-use those artifacts. This is a lot like the &lt;code&gt;cache.nixos.org&lt;/code&gt; builders, and it becomes particularly helpful if packages you depend on are also using Garnix; but even more significant with forks.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Garnix has more powerful machines than Github, and that in turn, enables higher &lt;strong&gt;parallelism&lt;/strong&gt;. Additionally, rather than vCPUs, we use CPU shares. The idea is, if the machine is not busy, you get a really fast machine; that works well for everyone, since then your build is done sooner and the machine is again free (or free-er) for the next build. Throttling the CPU is terrible for overall latency, and the only advantages I can see are more predictable times for users, and easier implementation if you‚Äôre using bin-packing schedulers/orchestrators.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;whats-the-cache-retention-policy&quot;&gt;What‚Äôs the cache retention policy?&lt;/h4&gt;

&lt;p&gt;Regarding the cache, it just serves its own Nix store. A clear retention policy is still in the works, so relying on the cache being available longer term would be a bad idea. However, the current idea looks as follows:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2-3 days for commits that are no longer the head of any branch.&lt;/li&gt;
  &lt;li&gt;2 weeks for the head of non-main branches&lt;/li&gt;
  &lt;li&gt;2-3 months for the head of &lt;code&gt;main&lt;/code&gt; / &lt;code&gt;master&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once this is determined, it should be properly documented.&lt;/p&gt;

&lt;h3 id=&quot;alternatives&quot;&gt;Alternatives&lt;/h3&gt;

&lt;p&gt;The obvious alternative is Github Actions, which I just migrated away from. Furthermore, there‚Äôs also &lt;a href=&quot;https://nixbuild.net/&quot;&gt;Nixbuild&lt;/a&gt;, which is much more than a CI service, but I plan to cover it in a follow-up blog post as I‚Äôm still experimenting with it.&lt;/p&gt;

&lt;h3 id=&quot;final-words&quot;&gt;Final words&lt;/h3&gt;

&lt;p&gt;Garnix is a very promising piece of software that can save you plenty of time. If you also enjoy using it and would like to see it succeed like I do, please consider &lt;a href=&quot;https://opencollective.com/garnix_io&quot;&gt;donating&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Julian has also acknowledged that the sign-up process is still a bit confusing, so there are plans to improve it, but honestly I can‚Äôt remember about it since I‚Äôve signed up a year ago. If you are giving Garnix a try and find this to be the case, feel free to share your ideas to make it better in their issue tracker.&lt;/p&gt;

&lt;p&gt;Best,
Gabriel.&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Feb 2023 21:45:00 +0000</pubDate>
        <link>https://gvolpe.github.io/blog/garnix/</link>
        <guid isPermaLink="true">https://gvolpe.github.io/blog/garnix/</guid>
        
        
        <category>nix</category>
        
        <category>flakes</category>
        
        <category>ci</category>
        
        <category>cachix</category>
        
        <category>garnix</category>
        
      </item>
    
      <item>
        <title>Neovim meets Nix flakes</title>
        <description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;It is no secret that &lt;a href=&quot;https://neovim.io/&quot;&gt;Neovim&lt;/a&gt; is my favorite text editor. I use it on a daily basis for multiple purposes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To write Scala code (and the occasional Typescript) for $work.&lt;/li&gt;
  &lt;li&gt;To write the extensive text and code for &lt;a href=&quot;https://leanpub.com/u/gvolpe&quot;&gt;my books&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;To fine-tune my ever-changing &lt;a href=&quot;https://github.com/gvolpe/nix-config&quot;&gt;NixOS configuration&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;To write blog posts such as this one.&lt;/li&gt;
  &lt;li&gt;For the casual Haskell and Rust code I sometimes need to write.&lt;/li&gt;
  &lt;li&gt;Literally for any other text file I need to explore and modify.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All this functionality is enabled by many plugins configured and tailored to my needs. Now there exist a bunch of plugin managers to handle the installation of plugins, from the classic &lt;a href=&quot;https://github.com/junegunn/vim-plug&quot;&gt;vim-plug&lt;/a&gt; to the more esoteric &lt;a href=&quot;https://github.com/folke/lazy.nvim&quot;&gt;lazy.nvim&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On the other side we have Nix, which strives for reproducibility at all costs. Among the many packages in &lt;code&gt;nixpkgs&lt;/code&gt;, &lt;a href=&quot;https://github.com/NixOS/nixpkgs/blob/master/pkgs/applications/editors/neovim/default.nix&quot;&gt;Neovim&lt;/a&gt; has been around for a while. Furthermore, there exist &lt;a href=&quot;https://github.com/NixOS/nixpkgs/tree/master/pkgs/applications/editors/vim/plugins&quot;&gt;many derivations&lt;/a&gt; so that plugins can also be installed via Nix.&lt;/p&gt;

&lt;p&gt;Home Manager users can install and configure Neovim with any desired plugin via its &lt;a href=&quot;https://nix-community.github.io/home-manager/options.html#opt-programs.neovim.enable&quot;&gt;officially supported module&lt;/a&gt;. Or it can also be installed directly on NixOS. In either case, everything comes from the &lt;code&gt;nixpkgs&lt;/code&gt; repository.&lt;/p&gt;

&lt;p&gt;The only downside of relying on plugins defined in &lt;code&gt;nixpkgs&lt;/code&gt; is that they may get quickly outdated, forcing us to resort to overlays or overrides to actually use the latest version, or that specific fork you would like to test. This problem goes away with the introduction &lt;a href=&quot;https://nixos.wiki/wiki/Flakes&quot;&gt;Nix flakes&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;neovim-flake&quot;&gt;Neovim Flake&lt;/h2&gt;

&lt;p&gt;Up to August 2022, my Neovim configuration was tightly coupled to my Home Manager configuration. It now lives at &lt;a href=&quot;https://github.com/gvolpe/neovim-coc&quot;&gt;neovim-coc&lt;/a&gt;, and it is only there for archival reasons; it is no longer maintained.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/neovim-flake.png&quot; alt=&quot;flake&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It was back then when I started &lt;a href=&quot;https://github.com/gvolpe/neovim-flake&quot;&gt;Neovim Flake&lt;/a&gt; as a fork of &lt;a href=&quot;https://github.com/jordanisaacs&quot;&gt;Jordan Isaacs&lt;/a&gt;‚Äô flake. I liked the flakes approach for individual applications so much that I soon started making countless changes to adapt it to my needs and liking. It changed so much that you wouldn‚Äôt recognize it from the fork.&lt;/p&gt;

&lt;p&gt;Nowadays, it is my default Neovim configuration, and I would like to share with you what‚Äôs so special about it.&lt;/p&gt;

&lt;p&gt;Flakes consist of &lt;em&gt;inputs&lt;/em&gt; and &lt;em&gt;outputs&lt;/em&gt;. For instance, here are some inputs declared in the &lt;code&gt;flake.nix&lt;/code&gt; file.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;inputs =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    nixpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:nixos/nixpkgs/nixpkgs-unstable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    flake-utils&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:numtide/flake-utils&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;ss&quot;&gt;nmd =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;gitlab:rycee/nmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;flake =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;ss&quot;&gt;nvim-lspconfig =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:neovim/nvim-lspconfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;flake =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;nvim-treesitter =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:nvim-treesitter/nvim-treesitter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;flake =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first two inputs correspond to &lt;code&gt;nixpkgs&lt;/code&gt; (the version we want to use for all the packages) and &lt;code&gt;flake-utils&lt;/code&gt; (to make it compatible with Linux and Mac, among other platforms). The third input &lt;code&gt;nmd&lt;/code&gt; serves the purpose of generating documentation for the Nix modules, as we will see soon. Ultimately, the remaining inputs correspond to Neovim plugins pointing directly to their source (there are many more declared in this flake).&lt;/p&gt;

&lt;p&gt;The outputs can be displayed by running &lt;code&gt;nix flake show&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix flake show
git+file:///home/gvolpe/workspace/neovim-flake
‚îú‚îÄ‚îÄ‚îÄapps
‚îÇ   ‚îú‚îÄ‚îÄ‚îÄaarch64-darwin
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄdefault: app
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ‚îÄnvim: app
‚îÇ   ‚îú‚îÄ‚îÄ‚îÄaarch64-linux
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄdefault: app
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ‚îÄnvim: app
‚îÇ   ‚îú‚îÄ‚îÄ‚îÄx86_64-darwin
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄdefault: app
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ‚îÄnvim: app
‚îÇ   ‚îî‚îÄ‚îÄ‚îÄx86_64-linux
‚îÇ       ‚îú‚îÄ‚îÄ‚îÄdefault: app
‚îÇ       ‚îî‚îÄ‚îÄ‚îÄnvim: app
‚îú‚îÄ‚îÄ‚îÄdevShells
‚îÇ   ‚îî‚îÄ‚îÄ‚îÄx86_64-linux
‚îÇ       ‚îî‚îÄ‚îÄ‚îÄdefault: development environment &lt;span class=&quot;s1&quot;&gt;&amp;#39;nix-shell&amp;#39;&lt;/span&gt;
‚îú‚îÄ‚îÄ‚îÄnixosModules
‚îÇ   ‚îî‚îÄ‚îÄ‚îÄx86_64-linux: NixOS module
‚îú‚îÄ‚îÄ‚îÄoverlays
‚îÇ   ‚îî‚îÄ‚îÄ‚îÄx86_64-linux: Nixpkgs overlay
‚îî‚îÄ‚îÄ‚îÄpackages
    ‚îî‚îÄ‚îÄ‚îÄx86_64-linux
        ‚îú‚îÄ‚îÄ‚îÄdefault: package &lt;span class=&quot;s1&quot;&gt;&amp;#39;neovim-0.8.1&amp;#39;&lt;/span&gt;
        ‚îú‚îÄ‚îÄ‚îÄdocs: package &lt;span class=&quot;s1&quot;&gt;&amp;#39;html-manual&amp;#39;&lt;/span&gt;
        ‚îú‚îÄ‚îÄ‚îÄmetals: package &lt;span class=&quot;s1&quot;&gt;&amp;#39;metals-0.11.9&amp;#39;&lt;/span&gt;
        ‚îî‚îÄ‚îÄ‚îÄneovim-ide: package &lt;span class=&quot;s1&quot;&gt;&amp;#39;neovim-0.8.1&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We will find five different things, all with multi-platform support (only shown in &lt;code&gt;apps&lt;/code&gt;, and omitted for brevity in all the other cases).&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;apps&lt;/code&gt;: any program that can run via &lt;code&gt;nix run&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;devShells&lt;/code&gt;: development shells that can be used via &lt;code&gt;nix develop&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;nixosModules&lt;/code&gt;: modules that can be imported into your Nix system.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;overlays&lt;/code&gt;: custom packages and functions you can import into your configuration.&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;packages&lt;/code&gt;: any package that can be built via &lt;code&gt;nix build&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is the command we use when the project is checked out locally, but it can be done remotely too.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix flake show github:gvolpe/neovim-flake&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the same spirit, you can try this Neovim out with its &lt;a href=&quot;https://github.com/gvolpe/neovim-flake/blob/main/lib/neovim-ide-full.nix&quot;&gt;default configuration and enabled plugins&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix run github:gvolpe/neovim-flake&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, we all have different preferences, so it is normal to wish we could tweak a few settings here and there. This is made possible by the module explained in the following section.&lt;/p&gt;

&lt;h3 id=&quot;home-manager-module&quot;&gt;Home Manager module&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;nixosModules&lt;/code&gt; output exposes a Home Manager module we can import into our configuration.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;imports =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; neovim-flake&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nixosModules&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;hm &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once imported, we can use the module in our configuration as follows.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  programs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;neovim-ide =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;settings =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      vim&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;viAlias =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      vim&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;vimAlias =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      vim&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;lsp =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It‚Äôs called &lt;code&gt;neovim-ide&lt;/code&gt; because it is a batteries included Neovim configuration with LSP support for various languages, but emphasizing the Scala programming language. Here‚Äôs an example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  vim&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;lsp =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;scala =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;metals =&lt;/span&gt; pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;metalsBuilder &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;version =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;0.11.9+235-2f0e69f8-SNAPSHOT&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;outputHash =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;sha256-9ZJ5bew+ttAr+K9vsM6DKP4G0dcAEXyBYizNA7BeeG8=&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;type =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nvim-metals&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It is set to use the amazing &lt;a href=&quot;https://github.com/scalameta/nvim-metals&quot;&gt;nvim-metals&lt;/a&gt;, and the latest snapshot of Metals. We use &lt;code&gt;pkgs.metalsBuilder&lt;/code&gt; to build a custom Metals version, which is a function exposed by the &lt;code&gt;overlays&lt;/code&gt; output. In order to use it, we need to add it to our configuration. For example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;pkgs =&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; nixpkgs &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;overlays =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; neovim-flake&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;overlays&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;default &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The module is not final by any means, and it could certainly be improved, but it is perfect for my use cases. Ultimately, adding new modules is quite straightforward via a pull request.&lt;/p&gt;

&lt;p&gt;For example, here‚Äôs the module for the &lt;code&gt;hop&lt;/code&gt; plugin.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; config&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; lib&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; lib&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;cfg =&lt;/span&gt; config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;vim&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;hop&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  options&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;vim&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;hop =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;enable =&lt;/span&gt; mkOption &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;type =&lt;/span&gt; types&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;bool&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;description =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Enable Hop plugin (easy motion)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;config =&lt;/span&gt; mkIf cfg&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;enable &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
    vim&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;startPlugins =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;neovimPlugins&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;hop &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    vim&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;nnoremap =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;leader&amp;gt;h&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;lt;cmd&amp;gt; HopPattern&amp;lt;CR&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    vim&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;luaConfigRC =&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;      require(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hop&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;).setup()&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    &amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Have a look at all the existing &lt;a href=&quot;https://github.com/gvolpe/neovim-flake/tree/main/modules&quot;&gt;modules&lt;/a&gt; for more details.&lt;/p&gt;

&lt;h4 id=&quot;documentation&quot;&gt;Documentation&lt;/h4&gt;

&lt;p&gt;Home Manager users are accustomed to access the &lt;a href=&quot;https://nix-community.github.io/home-manager/options.html&quot;&gt;DocBook documentation&lt;/a&gt; for all the available options in a specific module. NixOS users enjoy an even &lt;a href=&quot;https://search.nixos.org/options&quot;&gt;better experience&lt;/a&gt;. Thanks to Robert Helgesson‚Äôs &lt;a href=&quot;https://gitlab.com/rycee/nmd/&quot;&gt;nmd&lt;/a&gt;, this Neovim Flake HM module is also documented at &lt;a href=&quot;https://gvolpe.com/neovim-flake/&quot;&gt;gvolpe.com/neovim-flake&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For instance, the &lt;a href=&quot;https://gvolpe.com/neovim-flake/options.html#opt-vim.lsp.scala.enable&quot;&gt;vim.lsp.scala&lt;/a&gt; options look as follows.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/vim-scala-docs.png&quot; alt=&quot;docs&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;updates&quot;&gt;Updates&lt;/h3&gt;

&lt;p&gt;So far, we have seen how it can be used and configured, but haven‚Äôt talked about one of its greatest benefits: updates. To update all inputs to their latest version, we can run the following command.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix flake update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, this is undesirable most of the time, as some plugins may break and we would not notice until we test that particular plugin, which may happen weeks after this update was performed.&lt;/p&gt;

&lt;p&gt;In most cases, it is recommended to update a specific plugin at a time, to test it in isolation. For example:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix flake lock --update-input nvim-metals
warning: updating lock file &lt;span class=&quot;s1&quot;&gt;&amp;#39;/home/gvolpe/workspace/neovim-flake/flake.lock&amp;#39;&lt;/span&gt;:
‚Ä¢ Updated input &lt;span class=&quot;s1&quot;&gt;&amp;#39;nvim-metals&amp;#39;&lt;/span&gt;:
    &lt;span class=&quot;s1&quot;&gt;&amp;#39;github:scalameta/nvim-metals/b7587a9155d22761f1b28c18f7927e6df0d08387&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2022-09-05&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  ‚Üí &lt;span class=&quot;s1&quot;&gt;&amp;#39;github:scalameta/nvim-metals/d1c01907256dae7c9d55ba1fcfb8cf6b4f583325&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2022-12-09&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;flake.lock&lt;/code&gt; file is the one keeping track of the specific versions we declare in our &lt;code&gt;flake.nix&lt;/code&gt; file. Once this plugin is updated, we can try to build it via &lt;code&gt;nix build&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Still, it would be more interesting to test the plugin actually works with a quick manual test. To do so, we can head to any Scala project directory, and run this version of the Neovim flake there.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../my-scala-project
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix run ../neovim-flake&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That is all it takes! Isn‚Äôt this wonderful?&lt;/p&gt;

&lt;p&gt;This approach allows us to use whatever plugin we want in whatever version (at least most of them).&lt;/p&gt;

&lt;h3 id=&quot;tree-sitter-plugins&quot;&gt;Tree-sitter plugins&lt;/h3&gt;

&lt;p&gt;Folks who rely on &lt;a href=&quot;https://github.com/tree-sitter/tree-sitter&quot;&gt;Tree-sitter&lt;/a&gt;, know that its installation with the many different grammars is not as trivial. Yet, Nix makes the management of tree-sitter grammars reproducible and easy to install.&lt;/p&gt;

&lt;p&gt;For example, these are some of the inputs I declare to use the &lt;code&gt;tree-sitter-scala&lt;/code&gt; fork from Eugene.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;inputs =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    ts-build&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:pta2002/build-ts-grammar.nix&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;ss&quot;&gt;tree-sitter-scala =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:eed3si9n/tree-sitter-scala/fork-integration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;flake =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is then treated specially by a library function defined by the Neovim Flake.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;tree-sitter-scala3 =&lt;/span&gt; inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;ts-build&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;buildGrammar pkgs &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;language =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;scala&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;version =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;eed3si9n-fork&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;source =&lt;/span&gt; inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;tree-sitter-scala&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;ts =&lt;/span&gt; prev&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;tree-sitter&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;override &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;extraGrammars =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; tree-sitter-scala3&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;treesitterGrammars =&lt;/span&gt; ts&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;withPlugins &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;p&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    p&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;tree-sitter-scala3
    p&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;tree-sitter-nix
    p&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;tree-sitter-elm
  &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can quickly look at the available grammars with the following command.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix search nixpkgs tree-sitter-grammars
* legacyPackages.x86_64-linux.tree-sitter-grammars.tree-sitter-bash &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.20.7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
* legacyPackages.x86_64-linux.tree-sitter-grammars.tree-sitter-beancount &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.20.7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
* legacyPackages.x86_64-linux.tree-sitter-grammars.tree-sitter-bibtex &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.20.7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
* legacyPackages.x86_64-linux.tree-sitter-grammars.tree-sitter-c &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.20.7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are always plugins that require special treatment, but that‚Äôs not a blocker. For instance, the Smithy grammar requires the highlights file to be copied manually for some reason, but Nix makes it easy to automate this trivial task in a reproducible way.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;nvimTreesitterHook =&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    rm -r parser&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    ln -s &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;treesitterGrammars&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt; parser&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    mkdir -p $out/queries/smithy&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;    cp &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;ts&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;builtGrammars&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;tree-sitter-smithy&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/queries/highlights.scm $out/queries/smithy/highlights.scm&lt;/span&gt;
&lt;span class=&quot;s1&quot;&gt;  &amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In most cases, building your custom tree-sitter grammar should be as simple as the &lt;code&gt;tree-sitter-scala&lt;/code&gt; one.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;If you are still hesitating over using Nix, this blog post laid out another compelling use case :)&lt;/p&gt;

&lt;p&gt;Give it a try (drop it a üåü if you enjoy it!) and if you need any help, reach out via the &lt;a href=&quot;https://github.com/gvolpe/neovim-flake/discussions&quot;&gt;discussions&lt;/a&gt; section.&lt;/p&gt;

&lt;p&gt;Merry Xmas,
Gabriel.&lt;/p&gt;

</description>
        <pubDate>Sun, 25 Dec 2022 13:45:00 +0000</pubDate>
        <link>https://gvolpe.github.io/blog/neovim-meets-nix-flakes/</link>
        <guid isPermaLink="true">https://gvolpe.github.io/blog/neovim-meets-nix-flakes/</guid>
        
        
        <category>neovim</category>
        
        <category>nix</category>
        
        <category>flakes</category>
        
        <category>treesitter</category>
        
        <category>scala</category>
        
      </item>
    
      <item>
        <title>Scala 3: the missing compiler plugin</title>
        <description>&lt;p&gt;If you have read this post when it first came out and felt offended by its catchy title, let me apologize for it. It caused some controversy, so I decided to change the title completely to highlight more what this post was about in the first place. Hope this time folks read to the end before drawing any conclusion :)&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.scala-lang.org/scala3/new-in-scala3.html&quot;&gt;Scala 3&lt;/a&gt; has been around for a while now, but not many people are using it in production just yet. There‚Äôs a lot of skepticism in the community when starting out a new project.&lt;/p&gt;

&lt;p&gt;It is still a niche language, even though it has seen a lot of adoption in the past few years. Given its hybrid OOP-FP nature, there are ‚Äúsub-communities‚Äù within the language, one of them being those that go FP all the way embraced by organizations such as &lt;a href=&quot;https://typelevel.org/&quot;&gt;Typelevel&lt;/a&gt;, which has its own ecosystem of libraries.&lt;/p&gt;

&lt;h2 id=&quot;tooling&quot;&gt;Tooling&lt;/h2&gt;

&lt;p&gt;From what I gathered from different folks, tooling and linting seem to be the biggest push-backs regarding Scala 3 adoption. Although tooling keeps on getting better every day when using &lt;a href=&quot;https://scalameta.org/metals/&quot;&gt;Metals&lt;/a&gt;, it seems IntelliJ IDEA support is not quite there yet‚Äîyou can follow its progress using the &lt;a href=&quot;https://youtrack.jetbrains.com/issues?q=tag:%20%7BScala%203%7D&quot;&gt;Scala 3 tag&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;As a Metals+NeoVim user myself, I am highly satisfied with the tooling support. Though, I must admit I don‚Äôt use too many features besides completion, navigation and diagnostics.&lt;/p&gt;

&lt;p&gt;Furthermore, new features such as significant whitespace and fewer braces only make it more difficult for tooling to get feature-parity with Scala 2.&lt;/p&gt;

&lt;p&gt;The official site has a &lt;a href=&quot;https://docs.scala-lang.org/scala3/guides/migration/tooling-tour.html&quot;&gt;Tooling Tour&lt;/a&gt; page offering a status report of the different tools such as Sbt, Mill and Maven (the latter still unsupported).&lt;/p&gt;

&lt;h2 id=&quot;linting&quot;&gt;Linting&lt;/h2&gt;

&lt;p&gt;Linting has been neglected in Scala 3, that‚Äôs the sad truth. Only in June this year &lt;a href=&quot;https://github.com/lampepfl/dotty/issues/15503&quot;&gt;it has been made official&lt;/a&gt;, and it got assigned in August as a ‚Äúsemester project‚Äù, but it may take a while until &lt;a href=&quot;https://github.com/lampepfl/dotty/pull/16157&quot;&gt;this work&lt;/a&gt; sees the light.&lt;/p&gt;

&lt;p&gt;Anyway, I think linting features such as ‚Äúunused variables‚Äù and ‚Äúunused imports‚Äù are only a nice-to-have, so I can understand why this work was not prioritized.&lt;/p&gt;

&lt;p&gt;However, there is one linting feature that has been blocking the FP community from taking this new version of the language more seriously: &lt;code&gt;-Wvalue-discard&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It may seem insignificant, but this little feature can prevent massive bugs from reaching production in purely functional codebases. Here‚Äôs an example that showcases its importance.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;program&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ref&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;performing critical work&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Suppose the &lt;code&gt;IO.println&lt;/code&gt; does indeed perform critical work. We would be discarding that value, perhaps accidentally, and the Scala compiler won‚Äôt help us fix this bug! This is extremely critical, and even seasoned functional programmers can forget to connect such values (e.g. via &lt;code&gt;*&amp;gt;&lt;/code&gt; or &lt;code&gt;flatMap&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;sbt&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;demo&amp;gt;&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;compile&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Total&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completed&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nov&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PM&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This kind of code can be even harder to manually spot in larger codebases.&lt;/p&gt;

&lt;p&gt;Scala 2 ships with &lt;code&gt;-Wvalue-discard&lt;/code&gt; (formerly known as &lt;code&gt;-Ywarn-value-discard&lt;/code&gt;), which would only emit a warning with the same code, but it is highly recommended to make it a fatal error via the &lt;code&gt;-Xfatal-warnings&lt;/code&gt; flag (also present in Scala 3).&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/typelevel/sbt-tpolecat&quot;&gt;sbt-tpolecat&lt;/a&gt; plugin makes it easy for us to focus on writing code if we let it manage the configuration of such important flags, which can be further customized.&lt;/p&gt;

&lt;p&gt;It is also worth noticing that there is a &lt;a href=&quot;https://github.com/lampepfl/dotty/pull/15975&quot;&gt;draft PR&lt;/a&gt; started by &lt;a href=&quot;https://github.com/cb372&quot;&gt;Chris Birchall&lt;/a&gt; sometime ago attempting to add support for &lt;code&gt;-Wvalue-discard&lt;/code&gt; to the Scala 3 compiler, but it has unfortunately gone inactive.&lt;/p&gt;

&lt;p&gt;Point in case, you may now understand why folks writing pure FP code are being skeptical about adopting Scala 3 in production systems! So, do we wait another year and see if it‚Äôs finally ready by then?&lt;/p&gt;

&lt;h3 id=&quot;give-up-all-hope&quot;&gt;Give up all hope?&lt;/h3&gt;

&lt;p&gt;Thankfully, not. Meet the &lt;a href=&quot;https://github.com/ghik/zerowaste&quot;&gt;Zerowaste&lt;/a&gt; compiler plugin coming to the rescue! It detects unused expressions (non-Unit), and it works for all major Scala versions.&lt;/p&gt;

&lt;p&gt;All we need is to add the plugin to our codebase as follows:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;libraryDependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compilerPlugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;com.github.ghik&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;zerowaste&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;lt;version&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cross&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CrossVersion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;full&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Together with enabling &lt;code&gt;sbt-tpolecat&lt;/code&gt;, the example code no longer compiles.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;sbt&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;demo&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compiling&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Scala&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sources&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gvolpe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;demo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scala&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;classes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;/home/gvolpe/demo/src/main/scala/demo/Main.scala:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;kt&quot;&gt;IO.println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;performing&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;critical&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;    &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;kt&quot;&gt;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;discarded&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expression&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;non&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;found&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Compile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compileIncremental&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Compilation&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;failed&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Total&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completed&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Nov&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2022&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;PM&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Yes! Exactly what we all FP nerds have been waiting for :)&lt;/p&gt;

&lt;h2 id=&quot;final-thoughts&quot;&gt;Final thoughts&lt;/h2&gt;

&lt;p&gt;Although some features are still missing, &lt;strong&gt;I absolutely love Scala 3&lt;/strong&gt; and promote its usage in production (we use it at work too). I even &lt;a href=&quot;https://leanpub.com/feda&quot;&gt;wrote a book&lt;/a&gt; that endorses this new version of the language.&lt;/p&gt;

&lt;p&gt;Yes, it would be great if more linting features land in the Scala compiler. But until then, we can rely on the Zerowaste compiler plugin. Still, it could benefit from more testing!&lt;/p&gt;

&lt;p&gt;If you have a Scala 3 project, please do give it a try and report any issues you may find. We can help each other and grow as a community together :)&lt;/p&gt;

&lt;p&gt;Finally, huge thanks to &lt;a href=&quot;https://github.com/ghik&quot;&gt;Roman Janusz&lt;/a&gt; (author of Zerowaste) for being the unsung Scala 3 FP hero!&lt;/p&gt;
</description>
        <pubDate>Sun, 20 Nov 2022 10:45:00 +0000</pubDate>
        <link>https://gvolpe.github.io/blog/scala3-missing-compiler-plugin/</link>
        <guid isPermaLink="true">https://gvolpe.github.io/blog/scala3-missing-compiler-plugin/</guid>
        
        
        <category>scala</category>
        
        <category>fp</category>
        
        <category>functional-programming</category>
        
        <category>tooling</category>
        
      </item>
    
      <item>
        <title>Scala 3: Error handling in FP land</title>
        <description>&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#error-types&quot;&gt;Error types&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#union-types-to-the-rescue&quot;&gt;Union types to the rescue!&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#error-handling&quot;&gt;Error handling&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#bottom-layer&quot;&gt;Bottom layer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#middle-layer&quot;&gt;Middle layer&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#top-layer&quot;&gt;Top layer&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#furthermore&quot;&gt;Furthermore&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Scala 3 introduces &lt;a href=&quot;https://docs.scala-lang.org/scala3/reference/new-types/union-types.html&quot;&gt;union types&lt;/a&gt;. Straight from the official documentation, a union type &lt;code&gt;A | B&lt;/code&gt; has as values all values of type &lt;code&gt;A&lt;/code&gt; and also all values of type &lt;code&gt;B&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So the following code snippet compiles performing an exhaustive pattern-matching.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Int&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Int!!!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Long!!!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, you are not here for boring examples, are you? :)&lt;/p&gt;

&lt;h3 id=&quot;error-types&quot;&gt;Error types&lt;/h3&gt;

&lt;p&gt;Union types are the perfect feature to model error types. In Scala 2, we could represent the presence of errors via the &lt;code&gt;Either&lt;/code&gt; monad. E.g.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;UserNotFound&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, if we want to model other errors, we can either get into &lt;a href=&quot;https://github.com/milessabin/shapeless/blob/70076c2/core/src/main/scala/shapeless/coproduct.scala&quot;&gt;Shapeless‚Äô Coproducts&lt;/a&gt; (fairly common during the Free Monad hype-era!) or into nested &lt;code&gt;Either&lt;/code&gt;s (arghhh). E.g.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateStory&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;UserNotFound&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Though, as we usually work in some &lt;code&gt;F[_]&lt;/code&gt; context, you can imagine things get only much more complicated and less ergonomic from here.&lt;/p&gt;

&lt;h4 id=&quot;union-types-to-the-rescue&quot;&gt;Union types to the rescue!&lt;/h4&gt;

&lt;p&gt;With union types, we can keep a single &lt;code&gt;Either&lt;/code&gt; instead.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateStory&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserNotFound&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or we could eliminate the &lt;code&gt;Either&lt;/code&gt; type altogether!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DuplicateStory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserNotFound&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Unit&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Much nicer! Now, how do we get this to play nicely in the &lt;code&gt;F&lt;/code&gt; context? Bear with me a little longer.&lt;/p&gt;

&lt;h3 id=&quot;error-handling&quot;&gt;Error handling&lt;/h3&gt;

&lt;p&gt;In my experience, error types are only desirable at the bottom layers. Most of the error handling should occur at the mid layers (business logic) where the errors are eliminated, or perhaps a few errors should be left for the top layers to handle.&lt;/p&gt;

&lt;p&gt;To put these words into an example, let‚Äôs say we work with a three-layer application.&lt;/p&gt;

&lt;h4 id=&quot;bottom-layer&quot;&gt;Bottom layer&lt;/h4&gt;

&lt;p&gt;At the bottom level, we have an &lt;code&gt;UserStore&lt;/code&gt; that interacts with a database.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateEmail&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where the error types are subtypes of &lt;code&gt;Throwable&lt;/code&gt; (this will make our lives easier).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scala.util.control.NoStackTrace&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DuplicateEmail&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NoStackTrace&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DuplicateEmail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DuplicateEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;NoStackTrace&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DuplicateUsername&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you have read my book &lt;a href=&quot;https://leanpub.com/pfp-scala&quot;&gt;Practical FP in Scala&lt;/a&gt;, you know I am not a big fan of stack traces :)&lt;/p&gt;

&lt;h4 id=&quot;middle-layer&quot;&gt;Middle layer&lt;/h4&gt;

&lt;p&gt;Now at the middle layer, we might have our business logic, making calls to the &lt;code&gt;UserStore&lt;/code&gt;, and perhaps to other components that interact with the outside world.&lt;/p&gt;

&lt;p&gt;In the following mid layer, our aim is to handle all declared errors, so we pattern match on all cases.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Logger:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MonadThrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;User $user persisted!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DuplicateEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Email ${user.email} already taken!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DuplicateUsername&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Email ${user.email} already taken!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After &lt;code&gt;flatMap&lt;/code&gt;ping the result of &lt;code&gt;save&lt;/code&gt;, we can pattern-match on the possible values. The nice thing here is that the Scala compiler checks for exhaustivity, so we never miss a declared error, in case that changes in the future.&lt;/p&gt;

&lt;p&gt;Sometimes, however, it happens that we are only interested in handling a subset of the errors, and whatever is added later should be handled at the top layers.&lt;/p&gt;

&lt;p&gt;Let‚Äôs say we only need to handle the &lt;code&gt;DuplicateEmail&lt;/code&gt; error.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Logger:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MonadThrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;User $user persisted!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asRight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DuplicateEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Email ${user.email} already taken!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asRight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asLeft&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Any other error is caught in the last case, where we simply leave it unhandled.&lt;/p&gt;

&lt;p&gt;This works, though, the ergonomics are not the best, as we need to manually call &lt;code&gt;asRight&lt;/code&gt; and &lt;code&gt;asLeft&lt;/code&gt; in different places. We can improve the UX with some custom extension methods.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Logger:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MonadThrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rethrow&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;User $user persisted!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recoverErrorWith&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DuplicateEmail&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Email ${user.email} already taken!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lift&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;First of all, &lt;code&gt;rethrow&lt;/code&gt; eliminates the inner &lt;code&gt;Either&lt;/code&gt;, giving us &lt;code&gt;F[Unit]&lt;/code&gt;. Next, we handle the error we are interested in via &lt;code&gt;recoverErrorWith&lt;/code&gt;. Both functions are defined by &lt;code&gt;ApplicativeError&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Until here the resulting type remains &lt;code&gt;F[Unit]&lt;/code&gt;. At last, the magic happens when we call &lt;code&gt;lift&lt;/code&gt; and get &lt;code&gt;F[Either[DuplicateUsername, Unit]]&lt;/code&gt; back!&lt;/p&gt;

&lt;p&gt;So what is &lt;code&gt;lift&lt;/code&gt;? It is a custom extension method defined as follows.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MonadThrow&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fa&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@nowarn&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Throwable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asRight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;recover&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asLeft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;UPDATE: &lt;a href=&quot;https://github.com/vasilmkd&quot;&gt;Vasil Vasilev&lt;/a&gt; discovered the existence of &lt;code&gt;attemptNarrow&lt;/code&gt; from &lt;code&gt;ApplicativeError&lt;/code&gt;, after having a quick chat about the differences between &lt;code&gt;lift&lt;/code&gt; and &lt;code&gt;attempt&lt;/code&gt;, which is exactly what this does.&lt;/p&gt;

&lt;p&gt;The only difference, is that &lt;code&gt;attemptNarrow&lt;/code&gt; requires a &lt;code&gt;ClassTag&lt;/code&gt;, but that‚Äôs not a problem :)&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Throwable:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ClassTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;fa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attemptNarrow&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We could use &lt;code&gt;attemptNarrow&lt;/code&gt; directly, but if you get to the end of this post, you‚Äôll understand why I chose to keep the &lt;code&gt;lift&lt;/code&gt; extension method instead.&lt;/p&gt;

&lt;p&gt;Notice that for this to work, we need to either declare the function‚Äôs return type or to indicate what types we expect when we call &lt;code&gt;lift&lt;/code&gt;. E.g.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raiseError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Err1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Err1&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Err2&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lift&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Err1&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Err2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rethrow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rethrow&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here‚Äôs another way of doing the same without &lt;code&gt;rethrow&lt;/code&gt; and &lt;code&gt;recoverErrorWith&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Logger:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MonadThrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;User $user persisted!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DuplicateEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Email ${user.email} already taken!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raiseError&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lift&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The only problem with the technique used in both &lt;code&gt;mid3&lt;/code&gt; and &lt;code&gt;mid4&lt;/code&gt;, is that we lose the error type information after a partial error handling and lifting. For instance, if we add another error to &lt;code&gt;UserStore[F]#save&lt;/code&gt;, the compiler won‚Äôt help us here.&lt;/p&gt;

&lt;p&gt;Nevertheless, this is easily fixed by pattern matching on all the errors, but it might require some repetition regarding &lt;code&gt;raiseError&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Logger:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MonadThrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;User $user persisted!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DuplicateEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Email ${user.email} already taken!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DuplicateUsername&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raiseError&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lift&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If we add another &lt;code&gt;FooError&lt;/code&gt; type in the bottom layers, the compiler is going to catch it here for us, and all we need to go is to re-raise it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;FooError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raiseError&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That‚Äôs what I mean with the potential repetition regarding &lt;code&gt;raiseError&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To conclude with this mid-layer section, let‚Äôs just say that all of these error handling techniques are valid; only they have different trade-offs.&lt;/p&gt;

&lt;h4 id=&quot;top-layer&quot;&gt;Top layer&lt;/h4&gt;

&lt;p&gt;At the top layer, is where we either handle the error or we let it crash. So here‚Äôs the perfect place to use &lt;code&gt;rethrow&lt;/code&gt; or &lt;code&gt;raiseError&lt;/code&gt;s we don‚Äôt care about.&lt;/p&gt;

&lt;p&gt;In the following example, we do not care about any unhandled errors so we let it fail.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evalMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rethrow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ack&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If this is called by a library like Http4s, this will be translated into an HTTP response with code 500, for example.&lt;/p&gt;

&lt;p&gt;Or we could do something about it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evalMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ack&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;DuplicateUsername&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Duplicate username&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ack&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handlerErroWith&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Unhandled $e, let it crash?&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nack&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Any unhandled errors will be logged and unacked (negative acknowledge).&lt;/p&gt;

&lt;h3 id=&quot;furthermore&quot;&gt;Furthermore&lt;/h3&gt;

&lt;p&gt;At the beginning of the post, when the idea of using union types for error modelling was introduced, it was hinted that we could eliminate the &lt;code&gt;Either&lt;/code&gt; altogether. How about that?&lt;/p&gt;

&lt;p&gt;Starting from the bottom layer, we can do this instead.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;trait&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UserStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Option&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateEmail&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, by doing so, we lose the &lt;code&gt;rethrow&lt;/code&gt; ability, as we are no longer working with &lt;code&gt;Either&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Challenge accepted! Let‚Äôs introduce a &lt;code&gt;rethrowU&lt;/code&gt; that works on union types.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MonadThrow&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Throwable&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fa&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rethrowU&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;fa&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asEither&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rethrow&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Throwable&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ut&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@nowarn&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asEither&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ut&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the same way, we can also introduce a &lt;code&gt;liftU&lt;/code&gt;, defined in terms of &lt;code&gt;lift&lt;/code&gt; under the same scope.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MonadThrow&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fa&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;liftU&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;&amp;lt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Throwable:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;ClassTag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lift&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;asUnionType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;extension&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;either&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Either&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;asUnionType&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;either&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is the reason why I kept the &lt;code&gt;lift&lt;/code&gt; extension method instead of using &lt;code&gt;attemptNarrow&lt;/code&gt;. However, I could have also named this &lt;code&gt;attemptNarrowU&lt;/code&gt; instead of &lt;code&gt;liftU&lt;/code&gt;, but I prefer the shorter names :)&lt;/p&gt;

&lt;p&gt;Now we can rewrite the final &lt;code&gt;mid5&lt;/code&gt; as follows.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Logger:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;MonadThrow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;](&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;UserStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;userStore&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;producer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;User $user persisted!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DuplicateEmail&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Email ${user.email} already taken!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DuplicateUsername&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raiseError&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;liftU&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And the final &lt;code&gt;top2&lt;/code&gt; as shown below.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-scala&quot; data-lang=&quot;scala&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;top3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt;, &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DuplicateUsername&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;receive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;evalMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flatMap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ack&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DuplicateUsername&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Duplicate username&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ack&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;handlerErroWith&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Unhandled $e, let it crash?&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;consumer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nack&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I think this error modeling and handling technique is very promising. I would probably still keep the &lt;code&gt;Either[E1 | E2, A&lt;/code&gt;] model over &lt;code&gt;E1 | E2 | A&lt;/code&gt;, but this blog post has demonstrated that both options are valid.&lt;/p&gt;

&lt;p&gt;The code shown in this post hasn‚Äôt been compiled, but I use the very same technique in the project of my &lt;a href=&quot;https://leanpub.com/feda&quot;&gt;upcoming book&lt;/a&gt;, so you can have a look the &lt;a href=&quot;https://github.com/gvolpe/trading/tree/main/modules/forecasts/src/main/scala/trading/forecasts&quot;&gt;source code&lt;/a&gt; directly.&lt;/p&gt;

&lt;p&gt;Let‚Äôs also remind ourselves that the left side of &lt;code&gt;Either&lt;/code&gt; representing errors is merely a social agreement. We could as well do it the other way around, but that would need different &lt;code&gt;Functor&lt;/code&gt; / &lt;code&gt;Monad&lt;/code&gt; instances, so it is not quite practical.&lt;/p&gt;

&lt;p&gt;In the same way, we could agree that only the right hand-side type of a union type represents the successful value, and any other types on the left hand-side represent the errors. We could probably write typeclass instances that prove the lawfulness of such approach.&lt;/p&gt;

&lt;p&gt;Error handling is always a hot topic in FP land, so don‚Äôt take this as the &lt;em&gt;ultimate word&lt;/em&gt;, but simply as a technique that can be exploited for our benefits :)&lt;/p&gt;

&lt;p&gt;Cheers,
Gabriel.&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Feb 2022 17:45:00 +0000</pubDate>
        <link>https://gvolpe.github.io/blog/error-handling-scala3/</link>
        <guid isPermaLink="true">https://gvolpe.github.io/blog/error-handling-scala3/</guid>
        
        
        <category>scala</category>
        
        <category>error-handling</category>
        
        <category>fp</category>
        
        <category>functional-programming</category>
        
      </item>
    
      <item>
        <title>Flakes: NixOS and Home Manager migration</title>
        <description>&lt;h3 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#introduction&quot;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-it-started-nixos&quot;&gt;How it started: NixOS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#next-step-home-manager&quot;&gt;Next step: Home Manager&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#one-flake-to-rule-them-all&quot;&gt;One flake to rule them all!&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#home-manager-flake-output&quot;&gt;Home Manager flake output&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#switching-configurations&quot;&gt;Switching configurations&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#flake-outputs&quot;&gt;Flake outputs&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;introduction&quot;&gt;Introduction&lt;/h3&gt;

&lt;p&gt;I have recently migrated my entire NixOS and Home Manager (HM) &lt;a href=&quot;https://github.com/gvolpe/nix-config&quot;&gt;configuration&lt;/a&gt; ‚Äî including programs, services, dotfiles, etc ‚Äî over to the new kid on the block: &lt;a href=&quot;https://nixos.wiki/wiki/Flakes&quot;&gt;Nix flakes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was not as difficult as I thought it would be but there were a lot of things I had to figure out on my own or by asking more experienced folks on the NixOS matrix channel.&lt;/p&gt;

&lt;p&gt;So let me tell you the important bits of this migration story in this short blog post ;)&lt;/p&gt;

&lt;h3 id=&quot;how-it-started-nixos&quot;&gt;How it started: NixOS&lt;/h3&gt;

&lt;p&gt;I initially had my NixOS configuration under the &lt;code&gt;system&lt;/code&gt; directory and my Home Manager configuration under &lt;code&gt;home&lt;/code&gt;, as you can see in the Github repo. So I decided to do the migration step by step, starting with the former.&lt;/p&gt;

&lt;p&gt;I created a &lt;code&gt;flake.nix&lt;/code&gt; file under &lt;code&gt;/etc/nixos&lt;/code&gt; with the following content.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;description =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;NixOS configuration&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nixpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nixpkgs/nixos-unstable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;outputs =&lt;/span&gt; inputs &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; self&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; nixpkgs &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;system =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;x86_64-linux&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;nixosConfigurations =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;ss&quot;&gt;tongfang-amd =&lt;/span&gt; nixpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nixosSystem &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;specialArgs =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; inputs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
          &lt;span class=&quot;ss&quot;&gt;modules =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/machine/tongfang-amd&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/configuration.nix&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I could then build my system using this flake! Easy, right?&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo nixos-rebuild switch --flake .#tongfang-amd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By default, &lt;code&gt;nixos-rebuild&lt;/code&gt; expects the configuration under &lt;code&gt;/etc/nixos&lt;/code&gt;. However, we can specify a different directory, as shown below.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo nixos-rebuild switch --flake &lt;span class=&quot;s1&quot;&gt;&amp;#39;/home/gvolpe/workspace/nix-config#tongfang-amd&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It also turns out this flake can be built via &lt;code&gt;nix build&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix build .#nixosConfigurations.tongfang-amd.config.system.build.toplevel
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo result/bin/switch-to-configuration switch&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This means we can switch the system configuration from any directory by using either command!&lt;/p&gt;

&lt;p&gt;That‚Äôs handy if you keep all your configurations in a single directory and these are tracked by a version control system (VCS) such as git.&lt;/p&gt;

&lt;h3 id=&quot;next-step-home-manager&quot;&gt;Next step: Home Manager&lt;/h3&gt;

&lt;p&gt;This was not as straightforward, as my HM configuration is a bit complex, but doable nonetheless. In the same way, I started creating a &lt;code&gt;flake.nix&lt;/code&gt; under the &lt;code&gt;home&lt;/code&gt; directory but I quickly realized having two different flakes for a single machine is not ideal.&lt;/p&gt;

&lt;p&gt;However, since both the NixOS and HM configurations can be built from anywhere (no need to be under &lt;code&gt;/etc/nixos&lt;/code&gt; and &lt;code&gt;$HOME/.config/nixpkgs&lt;/code&gt;, respectively), I went with a single &lt;code&gt;flake.nix&lt;/code&gt; where both the NixOS and HM configurations live (importing modules to make it more readable, of course).&lt;/p&gt;

&lt;p&gt;A nice property of having a single flake, is that we can find out all the pinned versions by looking at the &lt;code&gt;flake.lock&lt;/code&gt; file. We also get to manage everything from a single &lt;code&gt;nix flake&lt;/code&gt; command.&lt;/p&gt;

&lt;h4 id=&quot;one-flake-to-rule-them-all&quot;&gt;One flake to rule them all!&lt;/h4&gt;

&lt;p&gt;So here‚Äôs the only &lt;code&gt;flake.nix&lt;/code&gt; that contains both NixOS and HM configurations.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;description =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Home Manager (dotfiles) and NixOS configurations&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;inputs =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    nixpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nixpkgs/nixos-unstable&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;ss&quot;&gt;nurpkgs =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:nix-community/NUR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nixpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;follows =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nixpkgs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;ss&quot;&gt;home-manager =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:nix-community/home-manager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;nixpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;follows =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nixpkgs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;ss&quot;&gt;tex2nix =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;url =&lt;/span&gt; &lt;span class=&quot;l&quot;&gt;github:Mic92/tex2nix/4b17bc0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      inputs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;utils&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;follows =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nixpkgs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;outputs =&lt;/span&gt; inputs &lt;span class=&quot;p&quot;&gt;@&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; self&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; nixpkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; nurpkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; home-manager&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; tex2nix &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;system =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;x86_64-linux&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;homeConfigurations =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/outputs/home-conf.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; system nixpkgs nurpkgs home-manager tex2nix&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      &lt;span class=&quot;ss&quot;&gt;nixosConfigurations =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/outputs/nixos-conf.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;nixpkgs&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; lib&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; inputs system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

      devShell&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;system&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/outputs/installation.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; system nixpkgs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It consists of a set of inputs and a set of outputs.&lt;/p&gt;

&lt;p&gt;To make things more readable, I moved the corresponding configurations to the &lt;code&gt;outputs&lt;/code&gt; directory. So the NixOS configuration now lives under &lt;code&gt;outputs/nixos-conf.nix&lt;/code&gt;, and so on.&lt;/p&gt;

&lt;h4 id=&quot;you-can-skip-this-installation-shell&quot;&gt;You can skip this: installation shell&lt;/h4&gt;

&lt;p&gt;There is also a &lt;code&gt;devShell&lt;/code&gt; with two packages that I use for a fresh installation for custom build script, but that‚Äôs quite personal so feel free to skip this part.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; system&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; nixpkgs &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;pkgs =&lt;/span&gt; nixpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;legacyPackages&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;system&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
pkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;mkShell &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;name =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;installation-shell&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;buildInputs =&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; wget s-tar &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What‚Äôs great is that I can enter this shell without even checking out the project.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix develop github:gvolpe/nix-config&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;home-manager-flake-output&quot;&gt;Home Manager flake output&lt;/h4&gt;

&lt;p&gt;The &lt;code&gt;homeConfigurations&lt;/code&gt; is a custom flake output, which is not recognized by Nix flakes, so when we try to display it, it shows ‚Äúunknown‚Äù as a description but this will probably be supported in the future.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix flake show &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; rg homeConfigurations
‚îú‚îÄ‚îÄ‚îÄhomeConfigurations: unknown&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So what‚Äôs in the &lt;code&gt;outputs/home-conf.nix&lt;/code&gt;? A basic HM configuration might look as follows.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-nix&quot; data-lang=&quot;nix&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; system&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; nixpkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; nurpkgs&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; home-manager&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}:&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;let&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;username =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;gvolpe&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;homeDirectory =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/home/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;username&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;configHome =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;${&lt;/span&gt;homeDirectory&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.config&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;pkgs =&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; nixpkgs &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; system&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;allowUnfree =&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    config&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;xdg&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;configHome =&lt;/span&gt; configHome&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;overlays =&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; nurpkgs&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;overlay &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;ss&quot;&gt;nur =&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; nurpkgs &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;nurpkgs =&lt;/span&gt; pkgs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;ss&quot;&gt;main =&lt;/span&gt; home-manager&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;lib&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;homeManagerConfiguration &lt;span class=&quot;k&quot;&gt;rec&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; pkgs system username homeDirectory&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;ss&quot;&gt;stateVersion =&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;21.03&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;configuration =&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;l&quot;&gt;/home.nix&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; nur pkgs&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;inherit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;pkgs&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; config lib stdenv&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Where &lt;code&gt;./home.nix&lt;/code&gt; is your usual Home Manager configuration. From there, it will more likely get more complicated, as you will always tweak one piece or another.&lt;/p&gt;

&lt;p&gt;Mine looks very similar, except I have a few more overlays and two home configurations for two different displays. You can look at it directly on the Github repo to avoid repetition in here.&lt;/p&gt;

&lt;p&gt;The most confusing part for me was the order of evaluation in Nix (which seems to have changed?). So the overlays I had defined in &lt;code&gt;home.nix&lt;/code&gt; were no longer being picked up and I had to define them at the top level.&lt;/p&gt;

&lt;p&gt;Also, I had to set the &lt;code&gt;config.xdg.configHome&lt;/code&gt; manually when importing &lt;code&gt;nixpkgs&lt;/code&gt;, which was before set in &lt;code&gt;home.nix&lt;/code&gt; via the &lt;code&gt;xdg.enable = true;&lt;/code&gt; attribute. I still haven‚Äôt figured out the right way to do this so I‚Äôm setting it myself, but if you do know, I‚Äôd appreciate if you let me know in the comments.&lt;/p&gt;

&lt;h4 id=&quot;switching-configurations&quot;&gt;Switching configurations&lt;/h4&gt;

&lt;p&gt;Now to apply a new configuration I was previously running &lt;code&gt;home-manager switch&lt;/code&gt;. However, now I prefer to directly build the flake and run the activation script from its result.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix build .#homeConfigurations.gvolpe-hdmi.activationPackage
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;result/activate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It is more verbose, though, so it is a good idea to have a script for this.&lt;/p&gt;

&lt;h3 id=&quot;flake-outputs&quot;&gt;Flake outputs&lt;/h3&gt;

&lt;p&gt;These are all the flake outputs I currently have (you can query the repo directly).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nix flake show github:gvolpe/nix-config
github:gvolpe/nix-config/962a766ab98217aba249f2614592bd5513a267a9
‚îú‚îÄ‚îÄ‚îÄdevShell
‚îÇ   ‚îî‚îÄ‚îÄ‚îÄx86_64-linux: development environment &lt;span class=&quot;s1&quot;&gt;&amp;#39;installation-shelbash&amp;#39;&lt;/span&gt;
‚îú‚îÄ‚îÄ‚îÄhomeConfigurations: unknown
‚îî‚îÄ‚îÄ‚îÄnixosConfigurations
    ‚îú‚îÄ‚îÄ‚îÄdell-xps: NixOS configuration
    ‚îî‚îÄ‚îÄ‚îÄtongfang-amd: NixOS configuration&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So far, I‚Äôm liking the flakes experience, and I only have words of gratitude for the thousands of contributors who have taken the Nix ecosystem where it is today, and it keeps on getting closer to perfection every day!&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I can only say one thing about my Nix configuration affairs: &lt;strong&gt;it ain‚Äôt over yet.&lt;/strong&gt; I‚Äôm still figuring things out and learning new stuff on a daily basis, so I‚Äôm sure there will be plenty of changes in the near future, specially considering that flakes are still marked as experimental.&lt;/p&gt;

&lt;p&gt;Anyway, that‚Äôs all I have to say. Thanks for stopping by and have a look at my &lt;a href=&quot;https://github.com/gvolpe/nix-config&quot;&gt;Nix configuration files&lt;/a&gt;, perhaps something in there helps you get that missing piece in yours :)&lt;/p&gt;

&lt;p&gt;Cheers,
Gabriel.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Jan 2022 09:45:00 +0000</pubDate>
        <link>https://gvolpe.github.io/blog/nix-flakes/</link>
        <guid isPermaLink="true">https://gvolpe.github.io/blog/nix-flakes/</guid>
        
        
        <category>nix</category>
        
        <category>nixos</category>
        
        <category>linux</category>
        
        <category>home-manager</category>
        
        <category>flakes</category>
        
      </item>
    
  </channel>
</rss>
